[{"/Users/chinyongchhe/Documents/Project/powerg/src/index.js":"1","/Users/chinyongchhe/Documents/Project/powerg/src/reportWebVitals.js":"2","/Users/chinyongchhe/Documents/Project/powerg/src/App.js":"3","/Users/chinyongchhe/Documents/Project/powerg/src/components/NavBar.js":"4","/Users/chinyongchhe/Documents/Project/powerg/src/components/DashBoard.js":"5","/Users/chinyongchhe/Documents/Project/powerg/src/components/Report.js":"6","/Users/chinyongchhe/Documents/Project/powerg/src/components/Users.js":"7","/Users/chinyongchhe/Documents/Project/powerg/src/components/Products.js":"8","/Users/chinyongchhe/Documents/Project/powerg/src/components/Home.js":"9","/Users/chinyongchhe/Documents/Project/powerg/src/components/HeaderBar.js":"10","/Users/chinyongchhe/Documents/Project/powerg/src/components/ContentUser.js":"11","/Users/chinyongchhe/Documents/Project/powerg/src/components/ContentUserAdd.js":"12","/Users/chinyongchhe/Documents/Project/powerg/src/components/Users/UserLogin.js":"13","/Users/chinyongchhe/Documents/Project/powerg/src/components/ContentUserEdit.js":"14","/Users/chinyongchhe/Documents/Project/powerg/src/components/PrivateRoute.js":"15","/Users/chinyongchhe/Documents/Project/powerg/src/context/AuthContext.js":"16","/Users/chinyongchhe/Documents/Project/powerg/src/components/PrivateLogin.js":"17","/Users/chinyongchhe/Documents/Project/powerg/src/components/Products/ContentProduct.js":"18","/Users/chinyongchhe/Documents/Project/powerg/src/components/Products/ContentProductAdd.js":"19","/Users/chinyongchhe/Documents/Project/powerg/src/components/Products/PDF.js":"20","/Users/chinyongchhe/Documents/Project/powerg/src/components/DashBoard/DashBoardTable.js":"21","/Users/chinyongchhe/Documents/Project/powerg/src/components/DashBoard/Chart.js":"22","/Users/chinyongchhe/Documents/Project/powerg/src/components/DeliveryMan/DeliveryDashBoard.js":"23","/Users/chinyongchhe/Documents/Project/powerg/src/components/DeliveryMan/DeliveryHeader.js":"24","/Users/chinyongchhe/Documents/Project/powerg/src/components/QrCode.js":"25","/Users/chinyongchhe/Documents/Project/powerg/src/components/Reports/ReportShop.js":"26","/Users/chinyongchhe/Documents/Project/powerg/src/components/Reports/ReportDelivery.js":"27"},{"size":266,"mtime":1611578030142,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1611577646798,"results":"30","hashOfConfig":"29"},{"size":5994,"mtime":1615802383375,"results":"31","hashOfConfig":"29"},{"size":1791,"mtime":1615802816876,"results":"32","hashOfConfig":"29"},{"size":261,"mtime":1614949807367,"results":"33","hashOfConfig":"29"},{"size":214,"mtime":1611588313977,"results":"34","hashOfConfig":"29"},{"size":697,"mtime":1615483389200,"results":"35","hashOfConfig":"29"},{"size":249,"mtime":1614615755872,"results":"36","hashOfConfig":"29"},{"size":404,"mtime":1615307924449,"results":"37","hashOfConfig":"29"},{"size":1899,"mtime":1615485793329,"results":"38","hashOfConfig":"29"},{"size":10368,"mtime":1615554190266,"results":"39","hashOfConfig":"29"},{"size":5085,"mtime":1615483249645,"results":"40","hashOfConfig":"29"},{"size":3446,"mtime":1615554407055,"results":"41","hashOfConfig":"29"},{"size":3748,"mtime":1615483264976,"results":"42","hashOfConfig":"29"},{"size":306,"mtime":1615307100622,"results":"43","hashOfConfig":"29"},{"size":240,"mtime":1615484050987,"results":"44","hashOfConfig":"29"},{"size":1284,"mtime":1615309984780,"results":"45","hashOfConfig":"29"},{"size":11334,"mtime":1615565390499,"results":"46","hashOfConfig":"29"},{"size":7855,"mtime":1615557362500,"results":"47","hashOfConfig":"29"},{"size":3625,"mtime":1615557717664,"results":"48","hashOfConfig":"29"},{"size":8968,"mtime":1615556614844,"results":"49","hashOfConfig":"29"},{"size":493,"mtime":1614955229135,"results":"50","hashOfConfig":"29"},{"size":13603,"mtime":1615826723887,"results":"51","hashOfConfig":"29"},{"size":2054,"mtime":1615486068710,"results":"52","hashOfConfig":"29"},{"size":4883,"mtime":1615400858280,"results":"53","hashOfConfig":"29"},{"size":10348,"mtime":1615806445385,"results":"54","hashOfConfig":"29"},{"size":8954,"mtime":1615802126492,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"rv8luh",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"58"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"58"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"58"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"58"},"/Users/chinyongchhe/Documents/Project/powerg/src/index.js",[],["131","132"],"/Users/chinyongchhe/Documents/Project/powerg/src/reportWebVitals.js",[],"/Users/chinyongchhe/Documents/Project/powerg/src/App.js",["133","134","135"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"ant-design-pro/dist/ant-design-pro.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Layout, Button } from \"antd\";\n// Components\nimport NavBar from \"./components/NavBar\";\nimport DashBoard from \"./components/DashBoard\";\nimport Products from \"./components/Products\";\nimport Report from \"./components/Report\";\nimport Users from \"./components/Users\";\nimport Home from \"./components/Home\";\nimport HeaderBar from \"./components/HeaderBar\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PrivateLogin from \"./components/PrivateLogin\";\nimport QrCode from \"./components/QrCode\";\nimport {\n  AuthContext,\n  RoleContext,\n  UsernameContext,\n} from \"./context/AuthContext\";\nimport Exception from \"ant-design-pro/lib/Exception\";\nimport DeliveryDashBoard from \"./components/DeliveryMan/DeliveryDashBoard\";\nimport ReportDelivery from \"./components/Reports/ReportDelivery\";\nimport ReportShop from \"./components/Reports/ReportShop\";\n// Style\nimport \"./style/app.css\";\n// import ReportDelivery from \"./components/Reports/ReportDelivery\";\n// import { UserLogin } from \"./components/Users/UserLogin\";\n\n// Destructuring\nconst { Content, Sider } = Layout;\n\nfunction App() {\n  // Convert pathname set to header\n  const firstPath = window.location.pathname.split(\"/\")[1];\n  // const path = firstPath.charAt(0).toUpperCase() + firstPath.slice(1);\n\n  // State\n  const [collapsed, setCollapse] = useState(false);\n  const [loginStatus, setLoginStatus] = useState(false);\n  const [roleStatus, setRoleStatus] = useState(\"\");\n  const [userNameStatus, setUsernameStatus] = useState(\"\");\n  console.log(\"123213\", roleStatus);\n  // const [title, setTitle] = useState(path);\n  const [title, setTitle] = useState(\"Dashboard\");\n  const handleCollapse = (collapsed) => {\n    console.log(collapsed);\n    setCollapse(collapsed);\n  };\n  console.log(\"login status\", loginStatus);\n\n  // UseEffect\n  useEffect(() => {\n    const user = localStorage.getItem(\"token\");\n    const role = localStorage.getItem(\"u_role\");\n    const username = localStorage.getItem(\"u_username\");\n    console.log(\"token\", user);\n    console.log(\"role\", role);\n    if (user) {\n      setLoginStatus(true);\n      setRoleStatus(role);\n      setUsernameStatus(username);\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ loginStatus, setLoginStatus }}>\n      <RoleContext.Provider value={{ roleStatus, setRoleStatus }}>\n        <UsernameContext.Provider value={{ userNameStatus, setUsernameStatus }}>\n          <Router>\n            <div className=\"App\">\n              <Switch>\n                <PrivateLogin\n                  path=\"/\"\n                  exact\n                  component={Home}\n                  auth={loginStatus}\n                  role={roleStatus}\n                />\n                {/* Delivery man */}\n                <PrivateRoute\n                  path=\"/delivery\"\n                  component={DeliveryDashBoard}\n                  auth={loginStatus}\n                />\n\n                <Route path=\"/qr/:pro_id\" component={QrCode} />\n\n                <Layout>\n                  <Sider\n                    theme=\"light\"\n                    style={{ minHeight: \"100vh\" }}\n                    collapsible\n                    collapsed={collapsed}\n                    onCollapse={handleCollapse}\n                    breakpoint=\"lg\"\n                    theme=\"light\"\n                  >\n                    <NavBar title={title} setTitle={setTitle} />\n                  </Sider>\n\n                  <Layout style={{ background: \"F2F3F6\" }}>\n                    <HeaderBar title={title} />\n\n                    <Content>\n                      {/* anything under switch will stop if first path match in */}\n                      {/* <Route path=\"/\" exact component={Home} /> */}\n                      <Switch>\n                        <PrivateRoute\n                          path=\"/dashboard\"\n                          component={() => <DashBoard title={title} />}\n                          auth={loginStatus}\n                          // render={() => <DashBoard title={title} />}\n                          title={title}\n                          exact\n                        />\n                        <Route path=\"/products\" component={Products} />\n                        <PrivateRoute\n                          path=\"/reportDelivery\"\n                          component={ReportDelivery}\n                          auth={loginStatus}\n                        />\n\n                        <PrivateRoute\n                          path=\"/reportShop\"\n                          component={ReportShop}\n                          auth={loginStatus}\n                        />\n                        {/* <Route path=\"/users\" component={Users} /> */}\n                        <PrivateRoute\n                          path=\"/users\"\n                          component={Users}\n                          auth={loginStatus}\n                        />\n                        <Route path=\"*\" exact>\n                          <Exception\n                            type=\"404\"\n                            title=\"Page not found\"\n                            actions={\n                              <div>\n                                <Button type=\"primary\" r>\n                                  <a href=\"/\">Home</a>\n                                </Button>\n                              </div>\n                            }\n                            desc=\"please click on button to redirect to homepage\"\n                          />\n                        </Route>\n                      </Switch>\n                    </Content>\n                  </Layout>\n                </Layout>\n\n                {/* Error */}\n              </Switch>\n            </div>\n          </Router>\n        </UsernameContext.Provider>\n      </RoleContext.Provider>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/NavBar.js",["136","137"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../images/favicon.ico\";\nimport \"antd/dist/antd.css\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  DesktopOutlined,\n  CalendarOutlined,\n  UserOutlined,\n  FileSearchOutlined,\n  CarOutlined,\n} from \"@ant-design/icons\";\n\nconst { Item } = Menu;\n\nfunction NavBar({ title, setTitle }) {\n  const handleClick = (e) => {\n    setTitle(e.target.innerHTML);\n  };\n  return (\n    <header>\n      <nav className=\"nav-bar\">\n        <Menu defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n          {/* Logo */}\n          <div className=\"logo\">\n            <Link to=\"/\">\n              <img src={logo} alt=\"Logo\" />\n            </Link>\n          </div>\n          {/* Item */}\n          <Item key=\"1\" className=\"icon\" icon={<DesktopOutlined />}>\n            <Link to=\"/dashboard\" onClick={handleClick}>\n              Dashboard\n            </Link>\n          </Item>\n\n          <Item key=\"2\" className=\"icon\" icon={<CalendarOutlined />}>\n            <Link to=\"/products\" onClick={handleClick}>\n              Proudct\n            </Link>\n          </Item>\n\n          <Item key=\"3\" className=\"icon\" icon={<FileSearchOutlined />}>\n            <Link to=\"/reportShop\" onClick={handleClick}>\n              Report for shop\n            </Link>\n          </Item>\n\n          <Item key=\"4\" className=\"icon\" icon={<CarOutlined />}>\n            <Link to=\"/reportDelivery\" onClick={handleClick}>\n              Report for delivery\n            </Link>\n          </Item>\n\n          <Item key=\"5\" className=\"icon\" icon={<UserOutlined />} title=\"User\">\n            <Link to=\"/users\" onClick={handleClick}>\n              Users\n            </Link>\n          </Item>\n        </Menu>\n      </nav>\n    </header>\n  );\n}\n\nexport default NavBar;\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/DashBoard.js",["138"],"import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport DashBoardTable from \"../components/DashBoard/DashBoardTable\";\nfunction DashBoard({ title }) {\n  return (\n    <nav>\n      <DashBoardTable />\n    </nav>\n  );\n}\n\nexport default DashBoard;\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/Report.js",[],"/Users/chinyongchhe/Documents/Project/powerg/src/components/Users.js",["139","140","141","142","143"],"import React, { useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport ContentUser from \"./ContentUser\";\nimport UserLogin from \"./Users/UserLogin\";\nimport { AuthContext, RoleContext } from \"../context/AuthContext\";\nfunction Users() {\n  const { loginStatus, setLoginStatus } = useContext(AuthContext);\n  const { roleStatus, setRoleStatus } = useContext(RoleContext);\n\n  const handleLogout = () => {\n    setLoginStatus(false);\n    setRoleStatus(\"\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"u_role\");\n  };\n  return (\n    <nav>\n      <ContentUser />\n      {/* <Button onClick={handleLogout}>Logout1</Button> */}\n    </nav>\n  );\n}\n\nexport default Users;\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/Products.js",["144"],"import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport ContentProduct from \"../components/Products/ContentProduct\";\nfunction Products() {\n  return (\n    <nav>\n      <ContentProduct />\n    </nav>\n  );\n}\n\nexport default Products;\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/Home.js",["145","146","147","148"],"import React, { useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router\";\nimport { RoleContext } from \"../context/AuthContext\";\n// Component\nimport { UserLogin } from \"./Users/UserLogin\";\nfunction Home() {\n  const { roleStatus, setRoleStatus } = useContext(RoleContext);\n  return (\n    <nav>\n      <UserLogin />\n    </nav>\n  );\n}\n\nexport default Home;\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/HeaderBar.js",["149","150","151","152","153","154"],"import React, { useContext } from \"react\";\nimport { Layout } from \"antd\";\nimport { Avatar, Image, Menu, Dropdown, Button } from \"antd\";\nimport { UserOutlined, DownOutlined, LogoutOutlined } from \"@ant-design/icons\";\nimport {\n  AuthContext,\n  RoleContext,\n  UsernameContext,\n} from \"../context/AuthContext\";\nconst { Header } = Layout;\nfunction HeaderBar({ title }) {\n  //State\n  const { loginStatus, setLoginStatus } = useContext(AuthContext);\n  const { roleStatus, setRoleStatus } = useContext(RoleContext);\n  const { userNameStatus, setUsernameStatus } = useContext(UsernameContext);\n  // Event\n  const handleLogout = () => {\n    console.log(\"hi there\");\n    setLoginStatus(false);\n    setRoleStatus(\"\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"u_role\");\n  };\n  // menu for dropdown avatar\n  const menu = (\n    <Menu className=\"admin-avatar\">\n      <Menu.Item onClick={handleLogout} icon={<LogoutOutlined />}>\n        Logout\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Header className=\"headerBar-container\">\n      <h5 style={{ margin: \"0\" }}>{title}</h5>\n      <div className=\"deliveryMan\">\n        <Dropdown overlay={menu} placement={\"topRight\"} arrow={true}>\n          <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\n            <Avatar\n              style={{\n                backgroundColor: \"#F05454\",\n                marginRight: \"0.5rem\",\n              }}\n              alt=\"user Avatar\"\n              icon={<UserOutlined />}\n              gap={30}\n              size=\"small\"\n            />\n            <span className=\"headerName\">{userNameStatus}</span>\n            <DownOutlined />\n          </a>\n        </Dropdown>\n      </div>\n    </Header>\n  );\n}\n\nexport default HeaderBar;\n\n// {\n//   /* <h5 style={{ margin: \"0\" }}>{title}</h5> */\n// }\n\n// display: \"flex\",\n// height: \"72px\",\n// alignItems: \"center\",\n// paddingLeft: \"40px\",\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/ContentUser.js",["155","156","157","158","159","160","161","162","163","164"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { Table, Button, Space, Modal, Input, Popconfirm, message } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport axios from \"axios\";\nimport {\n  UserAddOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  SearchOutlined,\n} from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\n\n// Component;\nimport ContentUserAdd from \"./ContentUserAdd\";\nimport ContentUserEdit from \"./ContentUserEdit\";\n\nfunction ContentUser() {\n  // useRef\n  const searchRef = useRef(null);\n\n  const data = [\n    {\n      key: \"1\",\n      user_id: \"000001\",\n      user_name: \"Kok dara\",\n      user_password: \"901294012940214\",\n      user_contact: \"0129928475\",\n    },\n    {\n      key: \"2\",\n      user_id: \"000002\",\n      user_name: \"Mingthean Lay\",\n      user_password: \"901294012940214\",\n      user_contact: \"0298844888\",\n    },\n    {\n      key: \"3\",\n      user_id: \"000003\",\n      user_name: \"Phal sokheng\",\n      user_password: \"901294012940214\",\n      user_contact: \"010928475\",\n    },\n  ];\n\n  // State\n  const [initialValue, setInitialValue] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  // const [searchInput, setSearchInput] = useState(\"\");\n  const [searchedColumn, SetSearchedColumn] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const [click, setClick] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [visible1, setVisible1] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [trigger, setTrigger] = useState(false);\n  const [modalText, setModalText] = useState(\"Content of the modal\");\n\n  useEffect(() => {\n    const fetchItem = async () => {\n      const result = await axios(`http://165.22.252.116/api/user/getallusers`, {\n        headers: {\n          \"auth-token\": localStorage.getItem(\"token\"),\n        },\n      });\n      const allData = result.data.data;\n      const datas = allData.map((data) => {\n        const contact = data.contact.split(\"\");\n        contact.splice(3, 0, \"  \");\n        contact.splice(7, 0, \"  \");\n        const contact_result = contact.join(\"\");\n        console.log(contact_result);\n        const object = Object.assign({}, data, { contact: contact_result });\n        return object;\n      });\n      setInitialValue(datas);\n    };\n    fetchItem();\n    console.log(\"first\", initialValue);\n  }, []);\n\n  // Fetch data again we anything change\n  useEffect(() => {\n    const fetchItem = async () => {\n      const result = await axios(`http://165.22.252.116/api/user/getallusers`, {\n        headers: {\n          \"auth-token\": localStorage.getItem(\"token\"),\n        },\n      });\n      const allData = result.data.data;\n      const datas = allData.map((data) => {\n        const contact = data.contact.split(\"\");\n        contact.splice(3, 0, \"  \");\n        contact.splice(7, 0, \"  \");\n        const contact_result = contact.join(\"\");\n        console.log(contact_result);\n        const object = Object.assign({}, data, { contact: contact_result });\n        return object;\n      });\n      setInitialValue(datas);\n    };\n    fetchItem();\n    console.log(\"first\", initialValue);\n  }, [trigger]);\n\n  // searchBar\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          inputId=\"select-input\"\n          ref={searchRef}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      console.log(\"search\", searchRef);\n      if (visible) {\n        // setTimeout(() => searchRef.current.select.inputRef.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    SetSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  //   Event-handler\n  const handleClick = (e) => {\n    console.log(\"Clicked me\");\n    setClick((prevClicked) => (prevClicked ? false : true));\n    console.log(click);\n    // <ContentUserAdd />;\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const showModal1 = () => {\n    setVisible1(true);\n  };\n\n  const handleOk = () => {\n    setModalText(\"The modal will be closed after two seconds\");\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    setVisible(false);\n  };\n\n  const handleCancel1 = () => {\n    console.log(\"Clicked cancel button\");\n    setVisible1(false);\n  };\n\n  // const handleDelete = (record) => {\n  //   console.log(\"record\", record);\n  // };\n  const handleEdit = (record) => {\n    setVisible1(true);\n    setUser(record);\n\n    console.log(record);\n  };\n\n  // Delete user\n  const confirm = async (record) => {\n    const id = record.user_id;\n    console.log(id);\n    try {\n      // Delete Data\n      const result = await axios.delete(\n        `http://165.22.252.116/api/user/deleteuserbyid/${id}`,\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      );\n      console.log(initialValue);\n      setInitialValue(initialValue.filter((value) => value.user_id != id));\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n    } catch (error) {\n      const messageError = error.response.data.message;\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n\n  const cancel = (e) => {\n    console.log(e);\n    message.error(\"Click on No\");\n  };\n\n  function refreshPage() {\n    window.location.reload();\n  }\n  // Data\n  const columns = [\n    {\n      //title is display on coulmn\n      //dataIndex to match with datasouce to display\n      title: <strong>ID</strong>,\n      dataIndex: \"user_id\",\n      key: \"id\",\n      // defaultSortOrder: \"ascend\",\n\n      ...getColumnSearchProps(\"user_id\"),\n      sorter: (a, b) => a.user_id - b.user_id,\n    },\n    {\n      title: <strong>USERNAME</strong>,\n      dataIndex: \"user_name\",\n      key: \"user_name\",\n      className: \"col-username\",\n      ...getColumnSearchProps(\"user_name\"),\n    },\n    // {\n    //   title: <strong>PASSWORD</strong>,\n    //   dataIndex: \"user_password\",\n    //   key: \"user_password\",\n    // },\n    {\n      title: <strong>CONTACT</strong>,\n      dataIndex: \"contact\",\n      key: \"user_contact\",\n    },\n    {\n      title: <strong>ACTION</strong>,\n      key: \"action\",\n      render: (text, record) => {\n        return (\n          // const editable = isEditing(record);\n          <Space size=\"middle\">\n            <Popconfirm\n              title=\"Are you sure to delete this user?\"\n              onConfirm={() => {\n                confirm(record);\n              }}\n              onCancel={cancel}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <Button\n                className=\"noOutLine removeUser\"\n                icon={<DeleteOutlined />}\n              ></Button>\n            </Popconfirm>\n\n            <Button\n              className=\"noOutLine editUser\"\n              icon={<EditOutlined />}\n              // onClick={() => handleEdit(text, record)}\n              onClick={() => {\n                handleEdit(record);\n              }}\n            ></Button>\n          </Space>\n        );\n      },\n    },\n  ];\n\n  //  Data\n  return (\n    <>\n      {/* Refresh Button */}\n      {/* <Button\n        className=\"userRefreshPage\"\n        icon={<SyncOutlined />}\n        onClick={refreshPage}\n        type=\"primary\"\n      >\n        Refresh\n      </Button> */}\n      <Button\n        className=\"userAdd \"\n        icon={<UserAddOutlined />}\n        onClick={showModal}\n      >\n        ADD\n      </Button>\n      {/* Table */}\n      <Table columns={columns} dataSource={initialValue} />\n\n      {/* ADD*/}\n      <Modal\n        title=\"Add New User\"\n        visible={visible}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        footer={null}\n        onCancel={handleCancel}\n      >\n        <ContentUserAdd\n          setVisible={setVisible}\n          initialValue={initialValue}\n          setInitialValue={setInitialValue}\n          setTrigger={setTrigger}\n        />\n      </Modal>\n\n      {/* Edit */}\n      <Modal\n        title=\"Edit User\"\n        visible={visible1}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        footer={null}\n        onCancel={handleCancel1}\n      >\n        <ContentUserEdit\n          setVisible={setVisible1}\n          user={user}\n          visible1={visible1}\n          setTrigger={setTrigger}\n        />\n      </Modal>\n    </>\n  );\n}\n\nexport default ContentUser;\n\n{\n  /* Condition */\n}\n{\n  /* {click ? <ContentUserAdd /> : <></>} */\n}\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/ContentUserAdd.js",["165","166","167","168","169","170","171","172","173"],"import React, { useState } from \"react\";\nimport { Button, Form, Input, message, Col, Row, Select } from \"antd\";\nimport { UserAddOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport \"antd/dist/antd.css\";\nconst { Item } = Form;\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nfunction ContentUserAdd({\n  setVisible,\n  initialValue,\n  setInitialValue,\n  setTrigger,\n}) {\n  // State\n  // const [visible, setVisible] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [modalText, setModalText] = useState(\"Content of the modal\");\n\n  const onFinish = async (values) => {\n    console.log(\"this is \" + values.username);\n    console.log(\"this is \" + values.password);\n    const username = values.username;\n    const password = values.password;\n    const contact = values.contact;\n    try {\n      const result = await axios.post(\n        `http://165.22.252.116/api/user/register`,\n        {\n          name: username,\n          password: password,\n          contact: contact,\n        },\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      );\n      console.log(result);\n\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n      setTrigger(true);\n      setTrigger(false);\n    } catch (error) {\n      const messageError = error.response.data.message;\n\n      // console.log(messageError);\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n  // EventHandler\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed hey\", errorInfo);\n  };\n\n  const handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    setVisible(false);\n  };\n\n  return (\n    <>\n      <Form\n        // onSubmit={handleSubmit}\n        {...layout}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        style={{ textAlign: \"center\" }}\n      >\n        {/* Username */}\n        <Item\n          name={\"username\"}\n          label=\"Username\"\n          rules={[\n            { transform: (value) => value.trim() },\n            {\n              whitespace: true,\n              message: \"No whitespace\",\n            },\n            {\n              required: true,\n              message: \"Please input your username!\",\n            },\n            {\n              min: 6,\n              message: \"Username must contain 6 letters\",\n            },\n          ]}\n        >\n          <Input />\n        </Item>\n\n        {/* Password */}\n        <Item\n          name={\"password\"}\n          label=\"Password\"\n          maxLength={20}\n          minLength={6}\n          rules={[\n            {\n              required: true,\n              message: \"please input your password!\",\n            },\n            {\n              whitespace: true,\n              message: \"No whitespace\",\n            },\n          ]}\n        >\n          <Input.Password />\n        </Item>\n        {/* Contact */}\n\n        <Item\n          label=\"Contact\"\n          style={{ textAlign: \"left\" }}\n          rules={[\n            {\n              required: true,\n              message: \"please input your phone number!\",\n            },\n            {\n              max: 10,\n              message: \"No exceed 10 digit\",\n            },\n            {\n              min: 9,\n              message: \"At least 9 digit\",\n            },\n            {\n              whitespace: true,\n              message: \"No whitespace\",\n            },\n          ]}\n          maxLength={10}\n          name={\"contact\"}\n        >\n          <Input />\n        </Item>\n\n        {/* Submit */}\n        <Item className=\"footerAddUser\">\n          <Button className=\"btnSubmitUser\" type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button type=\"default\" onClick={handleCancel}>\n            Cancel\n          </Button>\n        </Item>\n      </Form>\n    </>\n  );\n}\n\nexport default ContentUserAdd;\n\n// const onFinishFailed = (values) => {\n//   console.log(values);\n// };\n// const handleSubmit = (e) => {\n//   e.preventDefault();\n\n//   const user = {\n//     name: this.state.name,\n//   };\n\n//   axios\n//     .post(`165.22.252.116/api/user/register`, { user })\n//     .then((res) => {\n//       console.log(res);\n//       console.log(res.data);\n//     })\n//     .catch(console.log(\"errro\"));\n//   // action=\"\"\n//   //     method=\"POST\"\n//   console.log(\"hey\");\n// };\n\n//   name={\"contact\"}\n//   label=\"Contact\"\n//   rules={[\n//     {\n//       required: true,\n//       message: \"Please input your contact!\",\n//     },\n//   ]}\n// >\n//   <Input />\n\n// <Input\n//             addonBefore={prefixSelector}\n//             style={{\n//               width: \"100%\",\n//             }}\n//           />\n\n{\n  /* <Input.Group>\n<Input\n  style={{ width: \"20%\" }}\n  placeholder=\"012\"\n  value={\"23123123\"}\n/>\n<Input\n  style={{ width: \"40%\" }}\n  placeholder=\"899388338\"\n  value={\"23123123\"}\n/>\n</Input.Group> */\n}\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/Users/UserLogin.js",["174","175","176","177","178","179","180"],"import React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport \"antd/dist/antd.css\";\nimport logo from \"../../images/favicon.ico\";\nimport { Button, Form, Input, message } from \"antd\";\nimport {\n  AuthContext,\n  RoleContext,\n  UsernameContext,\n} from \"../../context/AuthContext\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\n\nconst { Item } = Form;\n\nexport const UserLogin = () => {\n  // State\n  const { loginStatus, setLoginStatus } = useContext(AuthContext);\n  const { roleStatus, setRoleStatus } = useContext(RoleContext);\n  const { userNameStatus, setUsernameStatus } = useContext(UsernameContext);\n  let history = useHistory();\n  // EventHandler\n  const onFinish = async (values) => {\n    const { username, password } = values;\n    try {\n      const result = await axios.post(`http://165.22.252.116/api/user/login`, {\n        name: username,\n        password: password,\n      });\n      console.log(\"result\", result);\n      const role = result.data.role;\n      console.log(\"role\", role);\n      const token = result.data.token;\n      const userId = result.data.user_log_id;\n      console.log(token);\n      setLoginStatus(true);\n      setRoleStatus(role);\n      setUsernameStatus(username);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"u_role\", role);\n      localStorage.setItem(\"u_id\", userId);\n      localStorage.setItem(\"u_username\", username);\n      // history.push(\"/dashboard\");\n    } catch (error) {\n      console.log(error.response);\n      const messageError = error.response.data.message;\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n      setLoginStatus(false);\n    }\n  };\n  return (\n    <div className=\"cover\">\n      <div className=\"userContainer\">\n        {/* Logo */}\n        <div className=\"userLogo\">\n          <img src={logo} alt=\"Logo\" />\n        </div>\n        {/* Form */}\n\n        <Form\n          onFinish={onFinish}\n          //   onFinishFailed={onFinishFailed}\n          className=\"FormCard\"\n        >\n          {/*Username*/}\n          <Item\n            name={\"username\"}\n            rules={[\n              {\n                required: true,\n                message: \"Please input your username!\",\n              },\n            ]}\n          >\n            <Input\n              placeholder=\"default size\"\n              placeholder=\"Username\"\n              prefix={\n                <UserOutlined style={{ color: \"gray\", opacity: \"50%\" }} />\n              }\n              className=\"userInput\"\n            />\n          </Item>\n          {/*Password*/}\n          <Item\n            name={\"password\"}\n            rules={[\n              {\n                required: true,\n                message: \"Please input your password!\",\n              },\n            ]}\n          >\n            <Input.Password\n              placeholder=\"default size\"\n              placeholder=\"Password\"\n              prefix={\n                <LockOutlined style={{ color: \"gray\", opacity: \"50%\" }} />\n              }\n              className=\"userInput\"\n            />\n          </Item>\n\n          {/* Submit */}\n          <Item className=\"userSubmit\">\n            <Button htmlType=\"submit\" className=\"userSubmitButton\">\n              LOG IN\n            </Button>\n          </Item>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\n// export default UserLogin;\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/ContentUserEdit.js",["181","182","183","184","185"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { Button, Form, Input, message } from \"antd\";\nimport { UserAddOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport \"antd/dist/antd.css\";\nconst { Item } = Form;\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst ContentUserEdit = ({ setVisible, user, visible1, setTrigger }) => {\n  // Object\n  const { user_name, user_password, contact } = user;\n  console.log(\"user\" + user);\n  const id = user.user_id;\n\n  // State\n  // const [userValue, setUserValue] = useState({\n  //   name: user_name,\n  //   password: user_password,\n  //   contact: contact,\n  // });\n\n  // EventHandler\n  const handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    setVisible(false);\n  };\n\n  const onFinish = async (values) => {\n    try {\n      const username = values.username;\n      const password = values.password;\n      const contact = values.contact;\n\n      const result = await axios.put(\n        `http://165.22.252.116/api/user/updateinfo/${id}`,\n        {\n          name: username,\n          password: password,\n          contact: contact,\n        },\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n\n        // { headers: { \"Access-Control-Allow-Origin\": \"*\" } }\n      );\n\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n      setTrigger(true);\n      setTrigger(false);\n    } catch (error) {\n      const messageError = error.response.data.message;\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n\n  return (\n    <>\n      <Form\n        // onSubmit={handleSubmit}\n        {...layout}\n        onFinish={onFinish}\n        // onFinishFailed={onFinishFailed}\n        style={{ textAlign: \"center\" }}\n        // initialValues={{ username: user_name, contact: contact }}\n      >\n        {/* Username */}\n        <Item\n          name={\"username\"}\n          label=\"Username\"\n          rules={[\n            {\n              required: true,\n            },\n            {\n              min: 6,\n              message: \"Username must contain 6 letters\",\n            },\n          ]}\n        >\n          <Input\n            defaultValue={user_name}\n            // value=\"sadsad\"\n            // onChange={(e) => setUserValue({ username: e.target.value })}\n            key={id}\n            placeholder=\"username\"\n          />\n        </Item>\n\n        {/* Password */}\n        <Item\n          name={\"password\"}\n          label=\"Password\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input.Password key={id} placeholder=\"***********\" />\n        </Item>\n        {/* Contact */}\n        <Item\n          name={\"contact\"}\n          label=\"Contact\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your contact!\",\n            },\n            {\n              max: 10,\n              message: \"No exceed 10 digit\",\n            },\n            {\n              min: 9,\n              message: \"At least 9 digit\",\n            },\n          ]}\n        >\n          <Input defaultValue={contact} key={id} placeholder=\"0123928472\" />\n        </Item>\n\n        {/* Submit */}\n        <Item className=\"footerAddUser\">\n          <Button className=\"btnSubmitUser\" type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button type=\"default\" onClick={handleCancel}>\n            Cancel\n          </Button>\n        </Item>\n      </Form>\n    </>\n  );\n};\n\nexport default ContentUserEdit;\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/PrivateRoute.js",[],"/Users/chinyongchhe/Documents/Project/powerg/src/context/AuthContext.js",["186","187"],"import React, { useState, createContext } from \"react\";\n\nexport const AuthContext = createContext();\nexport const ProductContext = createContext();\nexport const RoleContext = createContext();\nexport const UsernameContext = createContext();\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/PrivateLogin.js",[],"/Users/chinyongchhe/Documents/Project/powerg/src/components/Products/ContentProduct.js",["188","189","190","191","192","193","194","195","196","197","198"],"import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport axios from \"axios\";\nimport Highlighter from \"react-highlight-words\";\nimport {\n  DatePicker,\n  Table,\n  Button,\n  Space,\n  Modal,\n  Input,\n  Popconfirm,\n  message,\n  Tooltip,\n} from \"antd\";\nimport {\n  UserAddOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  SearchOutlined,\n  SyncOutlined,\n} from \"@ant-design/icons\";\nimport moment from \"moment\";\n\n// Component\nimport ContentProductAdd from \"../Products/ContentProductAdd\";\nimport { ProductContext } from \"../../context/AuthContext\";\nfunction ContentProduct() {\n  const data = [\n    {\n      key: \"1\",\n      package_id: \"000001\",\n      shop_owner: \"Kok dara\",\n      service_paid_by: \"COD\",\n      cust_location: \"AEON2\",\n      cust_name: \"Yong\",\n      pro_price: \"10$\",\n      date: \"30-july-2021\",\n      cust_contact: \"029384811\",\n      DeliveryID: \"0001\",\n    },\n    {\n      key: \"2\",\n      product_id: \"000002\",\n      shop_owner: \"Heng chanto\",\n      service_paid_by: \"COD\",\n      cust_location: \"Piphup tmey krang thnoung st7 #50 \",\n      cust_name: \"Yong\",\n      pro_price: \"1$\",\n      date: \"30-july-2021\",\n      cust_contact: \"0293848112\",\n      DeliveryID: \"9999\",\n    },\n    {\n      key: \"3\",\n      product_id: \"000003\",\n      shop_owner: \"Kok dara\",\n      service_paid_by: \"COD\",\n      cust_location: \"borey penghout near AEON2\",\n      cust_name: \"Yong\",\n      pro_price: \"10$\",\n      date: \"30-july-2021\",\n      cust_contact: \"029384811\",\n      DeliveryID: \"094885717\",\n    },\n  ];\n  const dateFormat = \"YYYY/MM/DD\";\n  //State\n  const [Trigger, setTrigger] = useState(false);\n  const [initialValue, setInitialValue] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [visible1, setVisible1] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, SetSearchedColumn] = useState(\"\");\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [modalText, setModalText] = useState(\"Content of the modal\");\n  const [redirect, setRedirect] = useState(false);\n  //State for Product\n  const [packageId, setPackageId] = useState();\n  const [date, setDate] = useState();\n  const [location, setLocation] = useState();\n  const [shopPhone, setShopPhone] = useState();\n  const [receiverPhone, setReceiverPhone] = useState();\n\n  //UseEffect\n  //Display all packages\n  useEffect(() => {\n    const fetchItem = async () => {\n      const result = await axios(`http://165.22.252.116/package/getAllPackage`);\n      console.log(\"result\" + result.data.data);\n      console.log(result.data);\n      const datas = result.data.data;\n\n      // const allData = result.data.data;\n      // const datas = allData.map((data) => {\n      //   const contact = data.contact.split(\"\");\n      //   contact.splice(3, 0, \"  \");\n      //   contact.splice(7, 0, \"  \");\n      //   const contact_result = contact.join(\"\");\n      //   console.log(contact_result);\n      //   const object = Object.assign({}, data, { contact: contact_result });\n      //   return object;\n      // });\n      setInitialValue(datas);\n    };\n    fetchItem();\n    console.log(\"first\", initialValue);\n  }, []);\n\n  useEffect(() => {\n    const fetchItem = async () => {\n      const result = await axios(`http://165.22.252.116/package/getAllPackage`);\n      console.log(\"result\" + result.data.data);\n      console.log(result.data);\n      const datas = result.data.data;\n\n      // const allData = result.data.data;\n      // const datas = allData.map((data) => {\n      //   const contact = data.contact.split(\"\");\n      //   contact.splice(3, 0, \"  \");\n      //   contact.splice(7, 0, \"  \");\n      //   const contact_result = contact.join(\"\");\n      //   console.log(contact_result);\n      //   const object = Object.assign({}, data, { contact: contact_result });\n      //   return object;\n      // });\n      setInitialValue(datas);\n    };\n    fetchItem();\n    console.log(\"first\", initialValue);\n  }, [Trigger]);\n\n  // Event\n  // get data after change date\n  function onChange(date, dateString) {\n    console.log(\"date\", date);\n    console.log(\"dateString\", dateString);\n  }\n\n  const cancel = (e) => {\n    console.log(e);\n    message.error(\"Click on No\");\n  };\n\n  const handleEdit = (record) => {\n    setVisible1(true);\n    // setUser(record);\n    console.log(record);\n  };\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    SetSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const handleOk = () => {\n    setModalText(\"The modal will be closed after two seconds\");\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n  const handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    setVisible(false);\n  };\n\n  // Delete user\n  const confirm = async (record) => {\n    const id = record.package_id;\n    console.log(id);\n    try {\n      // Delete Data\n      const result = await axios.delete(\n        `http://165.22.252.116/api/package/deleteuserby/${id}`,\n        {\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      );\n      console.log(initialValue);\n      setInitialValue(initialValue.filter((value) => value.user_id != id));\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n    } catch (error) {\n      const messageError = error.response.data.message;\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n\n  // searchBar\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          inputId=\"select-input\"\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        // setTimeout(() => searchRef.current.select.inputRef.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  // showModal\n  const showModal = () => {\n    setVisible(true);\n    setRedirect(false);\n  };\n\n  // Data\n  const columns = [\n    {\n      //title is display on coulmn\n      //dataIndex to match with datasouce to display\n      title: <strong>ID</strong>,\n      dataIndex: \"package_id\",\n      key: \"package_id\",\n      // defaultSortOrder: \"ascend\",\n\n      ...getColumnSearchProps(\"package_id\"),\n      sorter: (a, b) => a.package_id - b.package_id,\n    },\n    {\n      title: <strong>SHOP's Name</strong>,\n      dataIndex: \"shop_owner\",\n      key: \"shop_owner\",\n    },\n\n    {\n      title: <strong>COD</strong>,\n      dataIndex: \"service_paid_by\",\n      key: \"service_paid_by\",\n    },\n\n    {\n      title: <strong>Receiver</strong>,\n      dataIndex: \"cust_name\",\n      key: \"cust_name\",\n    },\n    {\n      title: <strong>Price</strong>,\n      dataIndex: \"pro_price\",\n      key: \"pro_price\",\n    },\n\n    {\n      title: <strong> Contact</strong>,\n      dataIndex: \"cust_phone\",\n      key: \"cust_phone\",\n    },\n    {\n      title: <strong>Location</strong>,\n      dataIndex: \"cust_location\",\n      key: \"cust_location\",\n      className: \"pro-location\",\n    },\n    // {\n    //   title: <strong>Delivery By</strong>,\n    //   dataIndex: \"DeliveryID\",\n    //   key: \"DeliveryID\",\n    // },\n\n    {\n      title: <strong>Date</strong>,\n      dataIndex: \"created_at\",\n      key: \"date\",\n    },\n\n    {\n      title: <strong>ACTION</strong>,\n      key: \"action\",\n      render: (text, record) => {\n        return (\n          // const editable = isEditing(record);\n          <Space size=\"middle\">\n            <Popconfirm\n              title=\"Are you sure to delete this package?\"\n              onConfirm={() => {\n                confirm(record);\n              }}\n              onCancel={cancel}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <Button\n                className=\"noOutLine removeUser\"\n                icon={<DeleteOutlined />}\n              ></Button>\n            </Popconfirm>\n\n            {/* <Button\n              className=\"noOutLine editUser\"\n              icon={<EditOutlined />}\n              // onClick={() => handleEdit(text, record)}\n              onClick={() => {\n                handleEdit(record);\n              }}\n            ></Button> */}\n          </Space>\n        );\n      },\n    },\n  ];\n  return (\n    <ProductContext.Provider\n      value={{\n        packageId,\n        date,\n        location,\n        shopPhone,\n        receiverPhone,\n        setPackageId,\n        setDate,\n        setLocation,\n        setShopPhone,\n        setReceiverPhone,\n      }}\n    >\n      <div>\n        {/* ADD*/}\n\n        <Button\n          className=\"userAdd \"\n          icon={<UserAddOutlined />}\n          onClick={showModal}\n        >\n          ADD\n        </Button>\n        <Modal\n          title=\"Add New Product\"\n          visible={visible}\n          onOk={handleOk}\n          confirmLoading={confirmLoading}\n          footer={null}\n          onCancel={handleCancel}\n          width={800}\n        >\n          <ContentProductAdd\n            setVisible={setVisible}\n            initialValue={initialValue}\n            setInitialValue={setInitialValue}\n            setTrigger={setTrigger}\n            redirect={redirect}\n            setRedirect={setRedirect}\n          />\n        </Modal>\n\n        <DatePicker\n          defaultValue={moment()}\n          format={dateFormat}\n          onChange={onChange}\n          className=\"date\"\n        />\n        {/* Table */}\n        <Table\n          columns={columns}\n          /* dataSource={data} */ dataSource={initialValue}\n        />\n      </div>\n    </ProductContext.Provider>\n  );\n}\n\nexport default ContentProduct;\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/Products/ContentProductAdd.js",["199","200","201","202","203"],"import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport PDF from \"./PDF\";\nimport { ProductContext } from \"../../context/AuthContext\";\nimport \"antd/dist/antd.css\";\nimport { Button, Form, Input, message, Col, Row, Select } from \"antd\";\nimport { UserAddOutlined } from \"@ant-design/icons\";\nconst { Item } = Form;\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nfunction ContentProductAdd({ setTrigger, setVisible, redirect, setRedirect }) {\n  //State\n  // const [redirect, setRedirect] = useState(false);\n  const [productData, setProductData] = useState({});\n  const [packageId, setPackageId] = useState();\n  //useContext\n  // const {\n  //   packageId,\n  //   date,\n  //   location,\n  //   shopPhone,\n  //   receiverPhone,\n  //   setPackageId,\n  //   setDate,\n  //   setLocation,\n  //   setShopPhone,\n  //   setReceiverPhone,\n  // } = useContext(ProductContext);\n\n  function handleChange(value) {\n    console.log(`selected ${value}`);\n  }\n\n  const handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    setVisible(false);\n  };\n  //Event\n  const onFinish = async (values) => {\n    const shop_owner = values.shop_owner;\n    const cust_name = values.cust_name;\n    const cust_location = values.cust_location;\n    const cust_phone = values.cust_phone;\n    const pro_price = values.pro_price;\n    var payment_method = values.payment_method;\n    var service_fee = values.service_fee;\n    var service_paid_by = values.service_paid_by;\n    console.log(values);\n    if (values.service_fee === undefined) {\n      service_fee = 4000;\n    }\n    if (values.service_paid_by === undefined) {\n      service_paid_by = \"Transferer\";\n    }\n    if (values.payment_method === undefined) {\n      payment_method = \"COD\";\n    }\n\n    try {\n      const result = await axios.post(\n        `http://165.22.252.116/package/addpackage`,\n        {\n          shop_owner: shop_owner,\n          cust_name: cust_name,\n          cust_location: cust_location,\n          cust_phone: cust_phone,\n          pro_price: pro_price,\n          payment_method: payment_method,\n          service_fee: service_fee,\n          service_paid_by: service_paid_by,\n        },\n        { headers: { \"Access-Control-Allow-Origin\": \"*\" } }\n      );\n      console.log(result);\n\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n      setPackageId(result.data.package_id);\n      setTrigger(true);\n      setTrigger(false);\n      setRedirect(true);\n      setProductData({\n        shop_owner: shop_owner,\n        cust_name: cust_name,\n        cust_location: cust_location,\n        cust_phone: cust_phone,\n        pro_price: pro_price,\n        payment_method: payment_method,\n        service_fee: service_fee,\n        service_paid_by: service_paid_by,\n      });\n      // setVisible(false);\n    } catch (error) {\n      console.log(error);\n      // console.log(\"error\", error.response);\n      const messageError = error.response.data.message;\n\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n  return (\n    <div>\n      {!redirect ? (\n        <Form\n          // onSubmit={handleSubmit}\n          {...layout}\n          onFinish={onFinish}\n          // onFinishFailed={onFinishFailed}\n          style={{ textAlign: \"center\" }}\n        >\n          {/* Username */}\n          <Item\n            name={\"shop_owner\"}\n            label=\"Shop_owner\"\n            rules={[\n              { transform: (value) => value.trim() },\n              {\n                whitespace: true,\n                message: \"No whitespace\",\n              },\n              {\n                required: true,\n                message: \"Please input your shop_owner!\",\n              },\n            ]}\n          >\n            <Input />\n          </Item>\n\n          {/* Password */}\n          <Item\n            name={\"cust_name\"}\n            label=\"Customer's name\"\n            rules={[\n              {\n                required: true,\n                message: \"please input your customer name!\",\n              },\n              {\n                whitespace: true,\n                message: \"No whitespace\",\n              },\n            ]}\n          >\n            <Input />\n          </Item>\n\n          <Item\n            name={\"cust_phone\"}\n            label=\"Customer's Phone\"\n            rules={[\n              {\n                required: true,\n                message: \"please input your customer name!\",\n              },\n              {\n                whitespace: true,\n                message: \"No whitespace\",\n              },\n            ]}\n          >\n            <Input />\n          </Item>\n\n          <Item\n            name={\"pro_price\"}\n            label=\"Pro_Price ($)\"\n            rules={[\n              {\n                required: true,\n                message: \"please input your customer name!\",\n              },\n              {\n                whitespace: true,\n                message: \"No whitespace\",\n              },\n            ]}\n          >\n            <Input />\n          </Item>\n\n          <Item\n            name={\"service_fee\"}\n            label=\"service_fee (៛)\"\n            rules={[\n              // {\n              //   message: \"please input your servie_fee!\",\n              // },\n              {\n                whitespace: true,\n                message: \"No whitespace\",\n              },\n            ]}\n          >\n            <Input defaultValue={4000} />\n          </Item>\n\n          <Item\n            name={\"service_paid_by\"}\n            label=\"service_paid_by\"\n            rules={[\n              // {\n              //   required: true,\n              //   message: \"please input your servie_fee!\",\n              // },\n              {\n                whitespace: true,\n                message: \"No whitespace\",\n              },\n            ]}\n            style={{ textAlign: \"left\" }}\n          >\n            <Select\n              defaultValue=\"Transferer\"\n              style={{ width: 116 }}\n              onChange={handleChange}\n            >\n              <Option value=\"Transferer\">Transferer</Option>\n              <Option value=\"Receiver\">Receiver</Option>\n            </Select>\n          </Item>\n          <Item\n            style={{ textAlign: \"left\" }}\n            name={\"payment_method\"}\n            label=\"payment_method\"\n            rules={[\n              // {\n              //   required: true,\n              //   message: \"please input your payment_method!\",\n              // },\n              {\n                whitespace: true,\n                message: \"No whitespace\",\n              },\n            ]}\n          >\n            {/* <Input /> */}\n            <Select\n              defaultValue=\"COD\"\n              style={{ width: 116 }}\n              onChange={handleChange}\n            >\n              <Option value=\"COD\">COD</Option>\n              <Option value=\"Paid\">Paid</Option>\n            </Select>\n          </Item>\n\n          <Item\n            label=\"Location\"\n            style={{ textAlign: \"left\" }}\n            rules={[\n              {\n                required: true,\n                message: \"please input location!\",\n              },\n            ]}\n            name={\"cust_location\"}\n          >\n            <Input.TextArea />\n          </Item>\n\n          {/* Submit */}\n          <Item className=\"footerAddUser\">\n            <Button className=\"btnSubmitUser\" type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n            <Button type=\"default\" onClick={handleCancel}>\n              Cancel\n            </Button>\n          </Item>\n        </Form>\n      ) : (\n        <PDF productData={productData} package_id={packageId} />\n      )}\n    </div>\n  );\n}\n\nexport default ContentProductAdd;\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/Products/PDF.js",["204"],"import React, { useRef, useEffect } from \"react\";\nimport ReactToPdf from \"react-to-pdf\";\nimport axios from \"axios\";\nimport { Button } from \"antd\";\nimport QRCode from \"react-qr-code\";\nimport logo from \"../../images/favicon.ico\";\nimport packagePng from \"../../images/package.png\";\nimport location from \"../../images/location.png\";\nimport moment from \"moment\";\n// const options = {\n//   orientation: \"landscape\",\n//   unit: \"mm\",\n//   format: [297, 210],\n// };\nconst PDF = ({ productData, package_id }) => {\n  console.log(productData);\n  if (productData.service_fee === undefined) {\n    productData.service_fee = 4000;\n  }\n  const refPrint = useRef();\n  useEffect(() => {\n    const fetchItem = () => {\n      try {\n        // const result = axios.get(`15605.94949/get/${pro_id}`);\n      } catch (error) {\n        console.log(\"error\" + error);\n      }\n    };\n    fetchItem();\n  }, []);\n  return (\n    <>\n      <div className=\"btnPdf-container\">\n        {/* <ReactToPdf\n          targetRef={refPrint}\n          filename=\"qr-package.pdf\"\n          options={options}\n          //   x={0.5}\n          //   y={0.5}\n        >\n          {({ toPdf }) => <button onClick={toPdf}>Generate pdf</button>}\n        </ReactToPdf> */}\n        <div ref={refPrint} className=\"pdf-container\">\n          {/* Header */}\n          <div className=\"pdf-header\">\n            <img src={logo} alt=\"Logo\" className=\"pdf-logo\" />\n            <p>\n              {/* Change*/}\n              ID <span>094958189</span>\n            </p>\n          </div>\n\n          {/* Body */}\n          <div className=\"pdf-information\">\n            {/* change */}\n            <p className=\"pdf-date\">\n              {moment().format(\"MMMM Do YYYY, h:mm:ss a\")}\n              {/* 2021-01-1, 12h:30m */}\n              {/* moment().format('l');    // 3/11/2021 */}\n            </p>\n            <div className=\"pdf-sender\">\n              <img src={packagePng} alt=\"package.png\" />\n              អ្នកផ្ញើ <pre> ៖ </pre>\n              <span> {productData.shop_owner}</span>\n            </div>\n            <div className=\"pdf-receiver\">\n              <img src={location} alt=\"location.png\" />\n              អ្នកទទួល <pre> ៖</pre>{\" \"}\n              <span>\n                {\" \"}\n                {productData.cust_phone}, {productData.cust_location}.\n              </span>\n            </div>\n          </div>\n\n          <div className=\"pdf-price\">\n            <div className=\"pdf-priceTag\">\n              <p>តម្លៃដឹកជញ្ជួន</p>\n              {/* Change */}\n              <h3 className=\"price\">៛ {productData.service_fee}</h3>\n            </div>\n            <div className=\"pdf-cod\">{productData.payment_method}</div>\n            <figure>\n              <QRCode\n                value={`http://192.168.18.242:3000/qr/${package_id}`}\n                size={120}\n              />\n              <figcaption>Scan me</figcaption>\n            </figure>\n          </div>\n\n          <p className=\"pdf-website\">www.powergdelivery.com</p>\n\n          {/* <h2>shop's Owner:{productData.shop_owner}</h2>\n          <p>Location: {productData.cust_location}</p>\n          <h2>Product-ID convert to QR code</h2> */}\n        </div>\n\n        <ReactToPdf\n          targetRef={refPrint}\n          filename=\"qr-package.pdf\"\n          // options={options}\n          scale={1}\n          x={30}\n          y={5}\n        >\n          {({ toPdf }) => (\n            <Button type=\"primary\" onClick={toPdf} className=\"btnPdf\">\n              Generate pdf\n            </Button>\n          )}\n        </ReactToPdf>\n      </div>\n    </>\n  );\n};\n\nexport default PDF;\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/DashBoard/DashBoardTable.js",["205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231"],"import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport axios from \"axios\";\nimport Highlighter from \"react-highlight-words\";\nimport {\n  DatePicker,\n  Table,\n  Button,\n  Space,\n  Modal,\n  Input,\n  Popconfirm,\n  message,\n  Tooltip,\n  Select,\n} from \"antd\";\nimport {\n  UserAddOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  SearchOutlined,\n  SyncOutlined,\n} from \"@ant-design/icons\";\nimport moment from \"moment\";\n\n// Component\nimport ContentProductAdd from \"../Products/ContentProductAdd\";\nimport Chart from \"../../components/DashBoard/Chart\";\nimport { ProductContext } from \"../../context/AuthContext\";\n\nconst { Option } = Select;\n\nfunction ContentProduct() {\n  const data = [\n    {\n      key: \"1\",\n      product_id: \"000001\",\n      shop_owner: \"Kok dara\",\n      service_paid_by: \"COD\",\n      cust_location: \"AEON2\",\n      cust_name: \"Yong\",\n      status: \"SUCCESS\",\n      date: \"30-july-2021\",\n      DeliveryID: \"0001\",\n    },\n    {\n      key: \"2\",\n      product_id: \"000002\",\n      shop_owner: \"totot\",\n      service_paid_by: \"COD\",\n      cust_location: \"borey penghout near AEON2\",\n      cust_name: \"Yong\",\n      status: \"ON GOING\",\n      date: \"30-july-2021\",\n      DeliveryID: \"0001\",\n    },\n    {\n      key: \"3\",\n      product_id: \"000003\",\n      shop_owner: \"yong yong\",\n      service_paid_by: \"COD\",\n      cust_location: \"borey penghout \",\n      cust_name: \"Yong\",\n      status: \"ON GOING\",\n      date: \"30-july-2021\",\n      DeliveryID: \"0008\",\n    },\n    {\n      key: \"4\",\n      product_id: \"000003\",\n      shop_owner: \"yong yong\",\n      service_paid_by: \"COD\",\n      cust_location: \"borey penghout \",\n      cust_name: \"Yong\",\n      status: \"UNSUCCESS\",\n      date: \"30-july-2021\",\n      DeliveryID: \"0008\",\n    },\n  ];\n  // const object = Object.assign({}, datas, () => {\n  //   datas.map((data) => {\n  //     if (data.status === \"SUCCESS\") {\n  //       data.status;\n  //     }\n  //   });\n  // });\n  // const result = datas.map((data) => {\n  //   return data.status;\n  // });\n\n  const dateFormat = \"YYYY/MM/DD\";\n  //State\n  const [Trigger, setTrigger] = useState(false);\n  const [initialValue, setInitialValue] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [visible1, setVisible1] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, SetSearchedColumn] = useState(\"\");\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [modalText, setModalText] = useState(\"Content of the modal\");\n  //State for Product\n  const [packageId, setPackageId] = useState();\n  const [date, setDate] = useState();\n  const [location, setLocation] = useState();\n  const [shopPhone, setShopPhone] = useState();\n  const [receiverPhone, setReceiverPhone] = useState();\n\n  //UseEffect\n  //Display all packages\n  useEffect(() => {\n    const fetchItem = async () => {\n      const result = await axios(`http://165.22.252.116/api/user/getallusers`);\n      const allData = result.data.data;\n      const datas = allData.map((data) => {\n        const contact = data.contact.split(\"\");\n        contact.splice(3, 0, \"  \");\n        contact.splice(7, 0, \"  \");\n        const contact_result = contact.join(\"\");\n        console.log(contact_result);\n        const object = Object.assign({}, data, { contact: contact_result });\n        return object;\n      });\n      setInitialValue(datas);\n    };\n    fetchItem();\n    console.log(\"first\", initialValue);\n  }, []);\n\n  // Event\n  // get data after change date\n  function onChange(date, dateString) {\n    console.log(\"date\", date);\n    console.log(\"dateString\", dateString);\n  }\n\n  const cancel = (e) => {\n    console.log(e);\n    message.error(\"Click on No\");\n  };\n\n  const handleEdit = (record) => {\n    setVisible1(true);\n    // setUser(record);\n    console.log(record);\n  };\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    SetSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const handleOk = () => {\n    setModalText(\"The modal will be closed after two seconds\");\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n  const handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    setVisible(false);\n  };\n\n  // Delete user\n  const confirm = async (record) => {\n    const id = record.product_id;\n    console.log(id);\n    try {\n      // Delete Data\n      const result = await axios.delete(\n        `http://165.22.252.116/api/user/deleteuserbyid/${id}`\n      );\n      console.log(initialValue);\n      setInitialValue(initialValue.filter((value) => value.user_id != id));\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n    } catch (error) {\n      const messageError = error.response.data.message;\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n\n  // searchBar\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          inputId=\"select-input\"\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        // setTimeout(() => searchRef.current.select.inputRef.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  // showModal\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  // Data\n  const columns = [\n    {\n      //title is display on coulmn\n      //dataIndex to match with datasouce to display\n      title: <strong>ID</strong>,\n      dataIndex: \"product_id\",\n      key: \"id\",\n      // defaultSortOrder: \"ascend\",\n\n      ...getColumnSearchProps(\"product_id\"),\n      sorter: (a, b) => a.product_id - b.product_id,\n    },\n    {\n      title: <strong>SHOP's Name</strong>,\n      dataIndex: \"shop_owner\",\n      key: \"shop_owner\",\n    },\n\n    {\n      title: <strong>COD</strong>,\n      dataIndex: \"service_paid_by\",\n      key: \"service_paid_by\",\n    },\n\n    {\n      title: <strong>Receiver</strong>,\n      dataIndex: \"cust_name\",\n      key: \"cust_name\",\n    },\n    {\n      title: <strong>STATUS</strong>,\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => (\n        <>\n          {(() => {\n            if (status === \"UNSUCCESS\")\n              return <span style={{ color: \"#ff4d4f\" }}>UNSUCCESS</span>;\n            if (status === \"ON GOING\")\n              return <span style={{ color: \"#1890ff\" }}>ON GOING</span>;\n            return <span style={{ color: \"#52c41a\" }}>SUCCESS</span>;\n          })()}\n        </>\n      ),\n    },\n    {\n      title: <strong>Date</strong>,\n      dataIndex: \"date\",\n      key: \"date\",\n    },\n\n    {\n      title: <strong>Delivery By</strong>,\n      dataIndex: \"DeliveryID\",\n      key: \"DeliveryID\",\n    },\n  ];\n  return (\n    <ProductContext.Provider\n      value={{\n        packageId,\n        date,\n        location,\n        shopPhone,\n        receiverPhone,\n        setPackageId,\n        setDate,\n        setLocation,\n        setShopPhone,\n        setReceiverPhone,\n      }}\n    >\n      <div>\n        <Chart />\n\n        {/* Table */}\n        <Table\n          columns={columns}\n          dataSource={data} /*dataSource={initialValue}*/\n        />\n      </div>\n    </ProductContext.Provider>\n  );\n}\n\nexport default ContentProduct;\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/DashBoard/Chart.js",[],"/Users/chinyongchhe/Documents/Project/powerg/src/components/DeliveryMan/DeliveryDashBoard.js",["232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247"],"/Users/chinyongchhe/Documents/Project/powerg/src/components/DeliveryMan/DeliveryHeader.js",["248","249","250","251","252","253"],"import React, { useContext } from \"react\";\nimport logo from \"../../images/favicon.ico\";\nimport { Avatar, Image, Menu, Dropdown, Button } from \"antd\";\nimport { UserOutlined, DownOutlined, LogoutOutlined } from \"@ant-design/icons\";\nimport {\n  AuthContext,\n  RoleContext,\n  UsernameContext,\n} from \"../../context/AuthContext\";\n\nfunction DeliveryHeader() {\n  //State\n  const { loginStatus, setLoginStatus } = useContext(AuthContext);\n  const { roleStatus, setRoleStatus } = useContext(RoleContext);\n  const { userNameStatus, setUsernameStatus } = useContext(UsernameContext);\n  const handleLogout = () => {\n    setLoginStatus(false);\n    setRoleStatus(\"\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"u_role\");\n  };\n  // menu for dropdown avatar\n  const menu = (\n    <Menu className=\"deliveryLogOut\">\n      <Menu.Item onClick={handleLogout} icon={<LogoutOutlined />}>\n        Logout\n      </Menu.Item>\n    </Menu>\n    // <Menu>\n    //   <Menu.Item>\n    //     <Button onClick={handleLogout}>Logout1</Button>\n    //   </Menu.Item>\n    // </Menu>\n  );\n  return (\n    <header className=\"header\">\n      <div className=\"header-bar\">\n        <img src={logo} alt=\"logo\" className=\"delivery-logo\" />\n        <div className=\"deliveryMan\">\n          <Dropdown overlay={menu} placement={\"topRight\"} arrow={true}>\n            <a\n              className=\"ant-dropdown-link\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <Avatar\n                style={{\n                  backgroundColor: \"#F05454\",\n                  marginRight: \"0.5rem\",\n                }}\n                alt=\"user Avatar\"\n                icon={<UserOutlined />}\n                gap={30}\n                size=\"small\"\n              />\n              <span className=\"name\">{userNameStatus}</span>\n              <DownOutlined />\n            </a>\n          </Dropdown>\n        </div>\n      </div>\n      <p className=\"deliveryDate\"> 21 January 2021</p>\n      <div className=\"listId\">#0959828</div>\n    </header>\n  );\n}\n\nexport default DeliveryHeader;\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/QrCode.js",["254","255","256","257","258","259","260"],"import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport logo from \"../images/favicon.ico\";\nimport bg from \"../images/qr-submit.png\";\nimport { Button, Form, Input, message, Col, Row, Select } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nconst { Item } = Form;\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n\n  // wrapperCol: {\n  //   span: 5,\n  // },\n};\nfunction QrCode({ match }) {\n  const pro_id = match.params.pro_id;\n  const user_id = localStorage.getItem(\"u_id\");\n  useEffect(() => {}, []);\n\n  const handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    // setVisible(false);\n  };\n  //Event\n  const onFinish = async (values) => {\n    console.log(\"this is \" + values.username);\n    console.log(\"this is \" + values.password);\n    const shop_owner = values.shop_owner;\n\n    try {\n      const result = await axios.post(\n        `http://165.22.252.116/package/addpackagetodeliveryman`,\n        {},\n        { headers: { \"Access-Control-Allow-Origin\": \"*\" } }\n      );\n\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n\n      // setVisible(false);\n    } catch (error) {\n      console.log(error);\n      const messageError = error.response.data.message;\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n  return (\n    // <div className=\"qr-container\">\n    //   <Form {...layout} onFinish={onFinish} className=\"qrCode\">\n    // {/* Package'Id*/}\n    // <Item\n    //   name={\"product_id\"}\n    //   label=\"Package's Id\"\n    //   className=\"disabledByMe\"\n    //   rules={[\n    //     {\n    //       whitespace: true,\n    //       message: \"No whitespace\",\n    //     },\n    //   ]}\n    // >\n    //   <Input defaultValue={pro_id} />\n    // </Item>\n\n    // {/*  DeliveryMan'Id */}\n    // <Item\n    //   name={\"delivery_id\"}\n    //   label=\"Delivery man's Id\"\n    //   className=\"disabledByMe\"\n    //   rules={[\n    //     {\n    //       whitespace: true,\n    //       message: \"No whitespace\",\n    //     },\n    //   ]}\n    // >\n    //   <Input defaultValue={user_id} />\n    // </Item>\n\n    //     {/* Submit */}\n    //     <Item className=\"qrSubmit\">\n    //       <Button\n    //         className=\"btnSubmitUser btnSubmitQr\"\n    //         type=\"primary\"\n    //         htmlType=\"submit\"\n    //       >\n    //         Submit\n    //       </Button>\n    //       <Button type=\"default\" onClick={handleCancel}>\n    //         Cancel\n    //       </Button>\n    //     </Item>\n    //   </Form>\n    // </div>\n\n    <div className=\"qr-cover\">\n      <div className=\"userContainer\">\n        {/* Logo */}\n        <div className=\"qr-code-logo\">\n          <img src={logo} alt=\"Logo\" />\n          <h5>បញ្ចាក់ការដឹក</h5>\n        </div>\n        {/* Form */}\n        <Form\n          onFinish={onFinish}\n          {...layout}\n          //   onFinishFailed={onFinishFailed}\n          className=\"FormCard\"\n        >\n          {/* Package'Id*/}\n          <Item\n            name={\"product_id\"}\n            label=\"Package's Id:\"\n            className=\"disabledByMe\"\n            rules={[\n              {\n                whitespace: true,\n                message: \"No whitespace\",\n              },\n            ]}\n          >\n            <Input defaultValue={pro_id} />\n          </Item>\n\n          {/*  DeliveryMan'Id */}\n          <Item\n            name={\"delivery_id\"}\n            label=\"Delivery man's Id:\"\n            className=\"disabledByMe\"\n            rules={[\n              {\n                whitespace: true,\n                message: \"No whitespace\",\n              },\n            ]}\n          >\n            <Input defaultValue={user_id} />\n          </Item>\n\n          {/* Submit */}\n          <Item className=\"userSubmit\">\n            <Button htmlType=\"submit\" className=\"userSubmitButton\">\n              Submit\n            </Button>\n          </Item>\n        </Form>\n      </div>\n      <img src={bg} alt=\"background\" className=\"bg\" />\n    </div>\n  );\n}\n\nexport default QrCode;\n\n//  {/*Username*/}\n//  <Item\n//  name={\"username\"}\n//  rules={[\n//    {\n//      required: true,\n//      message: \"Please input your username!\",\n//    },\n//  ]}\n// >\n//  <Input\n//    placeholder=\"default size\"\n//    placeholder=\"Username\"\n//    prefix={\n//      <UserOutlined style={{ color: \"gray\", opacity: \"50%\" }} />\n//    }\n//    className=\"userInput\"\n//  />\n// </Item>\n// {/*Password*/}\n// <Item\n//  name={\"password\"}\n//  rules={[\n//    {\n//      required: true,\n//      message: \"Please input your password!\",\n//    },\n//  ]}\n// >\n//  <Input.Password\n//    placeholder=\"default size\"\n//    placeholder=\"Password\"\n//    prefix={\n//      <LockOutlined style={{ color: \"gray\", opacity: \"50%\" }} />\n//    }\n//    className=\"userInput\"\n//  />\n// </Item>\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/Reports/ReportShop.js",["261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279"],"import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport axios from \"axios\";\nimport Highlighter from \"react-highlight-words\";\nimport {\n  DatePicker,\n  Table,\n  Button,\n  Space,\n  Modal,\n  Input,\n  Popconfirm,\n  message,\n  Tooltip,\n  Select,\n} from \"antd\";\nimport {\n  UserAddOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  SearchOutlined,\n  SyncOutlined,\n  ShopOutlined,\n  DownloadOutlined,\n} from \"@ant-design/icons\";\nimport moment from \"moment\";\n\n// Component\n\nimport { ProductContext } from \"../../context/AuthContext\";\n\nconst { Option } = Select;\n\nfunction ReportShop() {\n  const data = [\n    {\n      key: \"1\",\n      product_id: \"000001\",\n      shop_owner: \"Kok dara\",\n      service_paid_by: \"COD\",\n      cust_location: \"AEON2\",\n      cust_name: \"Yong\",\n      status: \"SUCCESS\",\n      date: \"30-july-2021\",\n      DeliveryID: \"0001\",\n    },\n    {\n      key: \"2\",\n      product_id: \"000002\",\n      shop_owner: \"totot\",\n      service_paid_by: \"COD\",\n      cust_location: \"borey penghout near AEON2\",\n      cust_name: \"Yong\",\n      status: \"ON GOING\",\n      date: \"30-july-2021\",\n      DeliveryID: \"0001\",\n    },\n    {\n      key: \"3\",\n      product_id: \"000003\",\n      shop_owner: \"yong yong\",\n      service_paid_by: \"COD\",\n      cust_location: \"borey penghout \",\n      cust_name: \"Yong\",\n      status: \"ON GOING\",\n      date: \"30-july-2021\",\n      DeliveryID: \"0008\",\n    },\n    {\n      key: \"4\",\n      product_id: \"000003\",\n      shop_owner: \"yong yong\",\n      service_paid_by: \"COD\",\n      cust_location: \"borey penghout \",\n      cust_name: \"Yong\",\n      status: \"UNSUCCESS\",\n      date: \"30-july-2021\",\n      DeliveryID: \"0008\",\n    },\n  ];\n  // const object = Object.assign({}, datas, () => {\n  //   datas.map((data) => {\n  //     if (data.status === \"SUCCESS\") {\n  //       data.status;\n  //     }\n  //   });\n  // });\n  // const result = datas.map((data) => {\n  //   return data.status;\n  // });\n\n  const dateFormat = \"YYYY/MM/DD\";\n  //State\n  const [Trigger, setTrigger] = useState(false);\n  const [initialValue, setInitialValue] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [visible1, setVisible1] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, SetSearchedColumn] = useState(\"\");\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [modalText, setModalText] = useState(\"Content of the modal\");\n  //State for Product\n  const [packageId, setPackageId] = useState();\n  const [date, setDate] = useState();\n  const [location, setLocation] = useState();\n  const [shopPhone, setShopPhone] = useState();\n  const [receiverPhone, setReceiverPhone] = useState();\n\n  //UseEffect\n  //Display all packages\n  useEffect(() => {\n    const fetchItem = async () => {\n      const result = await axios(`http://165.22.252.116/api/user/getallusers`);\n      const allData = result.data.data;\n      const datas = allData.map((data) => {\n        const contact = data.contact.split(\"\");\n        contact.splice(3, 0, \"  \");\n        contact.splice(7, 0, \"  \");\n        const contact_result = contact.join(\"\");\n        console.log(contact_result);\n        const object = Object.assign({}, data, { contact: contact_result });\n        return object;\n      });\n      setInitialValue(datas);\n    };\n    fetchItem();\n    console.log(\"first\", initialValue);\n  }, []);\n\n  // Event\n  // get data after change date\n  function onChange(date, dateString) {\n    console.log(\"date\", date);\n    console.log(\"dateString\", dateString);\n  }\n\n  const cancel = (e) => {\n    console.log(e);\n    message.error(\"Click on No\");\n  };\n\n  const handleEdit = (record) => {\n    setVisible1(true);\n    // setUser(record);\n    console.log(record);\n  };\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    SetSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const handleOk = () => {\n    setModalText(\"The modal will be closed after two seconds\");\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n  const handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    setVisible(false);\n  };\n\n  function handleChange(value) {\n    console.log(`selected ${value}`);\n  }\n\n  const handleDownload = () => {\n    console.log(\"Download\");\n  };\n\n  // Delete user\n\n  // searchBar\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          inputId=\"select-input\"\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        // setTimeout(() => searchRef.current.select.inputRef.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  // showModal\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  // Data\n  const columns = [\n    {\n      //title is display on coulmn\n      //dataIndex to match with datasouce to display\n      title: <strong>ID</strong>,\n      dataIndex: \"product_id\",\n      key: \"id\",\n      // defaultSortOrder: \"ascend\",\n\n      ...getColumnSearchProps(\"product_id\"),\n      sorter: (a, b) => a.product_id - b.product_id,\n    },\n    {\n      title: <strong>SHOP's Name</strong>,\n      dataIndex: \"shop_owner\",\n      key: \"shop_owner\",\n    },\n\n    {\n      title: <strong>COD</strong>,\n      dataIndex: \"service_paid_by\",\n      key: \"service_paid_by\",\n    },\n\n    {\n      title: <strong>Receiver</strong>,\n      dataIndex: \"cust_name\",\n      key: \"cust_name\",\n    },\n    {\n      title: <strong>STATUS</strong>,\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => (\n        <>\n          {(() => {\n            if (status === \"UNSUCCESS\")\n              return <span style={{ color: \"#ff4d4f\" }}>UNSUCCESS</span>;\n            if (status === \"ON GOING\")\n              return <span style={{ color: \"#1890ff\" }}>ON GOING</span>;\n            return <span style={{ color: \"#52c41a\" }}>SUCCESS</span>;\n          })()}\n        </>\n      ),\n    },\n    {\n      title: <strong>Date</strong>,\n      dataIndex: \"date\",\n      key: \"date\",\n    },\n\n    {\n      title: <strong>Delivery By</strong>,\n      dataIndex: \"DeliveryID\",\n      key: \"DeliveryID\",\n    },\n  ];\n  return (\n    <ProductContext.Provider\n      value={{\n        packageId,\n        date,\n        location,\n        shopPhone,\n        receiverPhone,\n        setPackageId,\n        setDate,\n        setLocation,\n        setShopPhone,\n        setReceiverPhone,\n      }}\n    >\n      {/* Header */}\n      <div>\n        <div className=\"total-container-report\">\n          <p>\n            TOTAL AMOUNT:{}\n            <span style={{ color: \"#e74c3c\", fontSize: \"1.25rem\" }}>\n              {\" \"}\n              $100{\" \"}\n            </span>{\" \"}\n          </p>\n          {/* <Button type=\"primary\" size=\"default\" className=\"total-button\">\n          Submit\n        </Button>\n        <Button>Cancel</Button> */}\n        </div>\n        <div className=\"header-reportShop\">\n          <DatePicker\n            defaultValue={moment()}\n            format={dateFormat}\n            onChange={onChange}\n            //   className=\"date\"\n          />\n          {/* shop */}\n          <Select\n            icon={<ShopOutlined />}\n            defaultValue=\"Shop\"\n            style={{ width: 120 }}\n            onChange={handleChange}\n            size=\"default\"\n          >\n            <Option value=\"jack\">ZANDO</Option>\n            <Option value=\"lucy\">MANZER</Option>\n            <Option value=\"lucy\">PEDRO</Option>\n          </Select>\n          {/* Status */}\n          <Select\n            icon={<ShopOutlined />}\n            defaultValue=\"Status\"\n            style={{ width: 120 }}\n            onChange={handleChange}\n            size=\"default\"\n          >\n            <Option value=\"SUCCESS\" style={{ color: \"#52c41a\" }}>\n              SUCCESS\n            </Option>\n            <Option value=\"UNSUCCESS\" style={{ color: \"#ff4d4f\" }}>\n              UNSUCCESS\n            </Option>\n          </Select>\n\n          {/* Download */}\n          <Button\n            type=\"primary\"\n            size=\"default\"\n            icon={<DownloadOutlined />}\n            onClick={handleDownload}\n          ></Button>\n        </div>\n        {/* Table */}\n        <Table\n          columns={columns}\n          dataSource={data} /*dataSource={initialValue}*/\n        />\n\n        {/* Amount is dynamic value */}\n        {/* Amount is dynamic value */}\n        {/* <div className=\"total-container-report\">\n          <p>\n            TOTAL AMOUNT:{}\n            <span style={{ color: \"#e74c3c\", fontSize: \"1.25rem\" }}>\n              100{\" \"}\n            </span>{\" \"}\n          </p>\n          \n        </div> */}\n      </div>\n    </ProductContext.Provider>\n  );\n}\n\nexport default ReportShop;\n","/Users/chinyongchhe/Documents/Project/powerg/src/components/Reports/ReportDelivery.js",["280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306"],"import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport axios from \"axios\";\nimport Highlighter from \"react-highlight-words\";\nimport {\n  DatePicker,\n  Table,\n  Button,\n  Space,\n  Modal,\n  Input,\n  Popconfirm,\n  message,\n  Tooltip,\n  Select,\n} from \"antd\";\nimport {\n  UserAddOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  SearchOutlined,\n  SyncOutlined,\n} from \"@ant-design/icons\";\nimport moment from \"moment\";\n\n// Component\nimport ContentProductAdd from \"../Products/ContentProductAdd\";\nimport Chart from \"../DashBoard/Chart\";\nimport { ProductContext } from \"../../context/AuthContext\";\n\nconst { Option } = Select;\n\nfunction ReportDelivery() {\n  const data = [\n    {\n      key: \"1\",\n      product_id: \"000001\",\n      shop_owner: \"Kok dara\",\n      service_paid_by: \"COD\",\n      cust_location: \"AEON2\",\n      cust_name: \"Yong\",\n      status: \"SUCCESS\",\n      date: \"30-july-2021\",\n      DeliveryID: \"0001\",\n    },\n    {\n      key: \"2\",\n      product_id: \"000002\",\n      shop_owner: \"totot\",\n      service_paid_by: \"COD\",\n      cust_location: \"borey penghout near AEON2\",\n      cust_name: \"Yong\",\n      status: \"ON GOING\",\n      date: \"30-july-2021\",\n      DeliveryID: \"0001\",\n    },\n    {\n      key: \"3\",\n      product_id: \"000003\",\n      shop_owner: \"yong yong\",\n      service_paid_by: \"COD\",\n      cust_location: \"borey penghout \",\n      cust_name: \"Yong\",\n      status: \"ON GOING\",\n      date: \"30-july-2021\",\n      DeliveryID: \"0008\",\n    },\n    {\n      key: \"4\",\n      product_id: \"000003\",\n      shop_owner: \"yong yong\",\n      service_paid_by: \"COD\",\n      cust_location: \"borey penghout \",\n      cust_name: \"Yong\",\n      status: \"UNSUCCESS\",\n      date: \"30-july-2021\",\n      DeliveryID: \"0008\",\n    },\n  ];\n  // const object = Object.assign({}, datas, () => {\n  //   datas.map((data) => {\n  //     if (data.status === \"SUCCESS\") {\n  //       data.status;\n  //     }\n  //   });\n  // });\n  // const result = datas.map((data) => {\n  //   return data.status;\n  // });\n\n  const dateFormat = \"YYYY/MM/DD\";\n  //State\n  const [Trigger, setTrigger] = useState(false);\n  const [initialValue, setInitialValue] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [visible1, setVisible1] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, SetSearchedColumn] = useState(\"\");\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [modalText, setModalText] = useState(\"Content of the modal\");\n  //State for Product\n  const [packageId, setPackageId] = useState();\n  const [date, setDate] = useState();\n  const [location, setLocation] = useState();\n  const [shopPhone, setShopPhone] = useState();\n  const [receiverPhone, setReceiverPhone] = useState();\n\n  //UseEffect\n  //Display all packages\n  useEffect(() => {\n    const fetchItem = async () => {\n      const result = await axios(`http://165.22.252.116/api/user/getallusers`);\n      const allData = result.data.data;\n      const datas = allData.map((data) => {\n        const contact = data.contact.split(\"\");\n        contact.splice(3, 0, \"  \");\n        contact.splice(7, 0, \"  \");\n        const contact_result = contact.join(\"\");\n        console.log(contact_result);\n        const object = Object.assign({}, data, { contact: contact_result });\n        return object;\n      });\n      setInitialValue(datas);\n    };\n    fetchItem();\n    console.log(\"first\", initialValue);\n  }, []);\n\n  // Event\n  // get data after change date\n  function onChange(date, dateString) {\n    console.log(\"date\", date);\n    console.log(\"dateString\", dateString);\n  }\n\n  const cancel = (e) => {\n    console.log(e);\n    message.error(\"Click on No\");\n  };\n\n  const handleEdit = (record) => {\n    setVisible1(true);\n    // setUser(record);\n    console.log(record);\n  };\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    SetSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const handleOk = () => {\n    setModalText(\"The modal will be closed after two seconds\");\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n  const handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    setVisible(false);\n  };\n\n  // Delete user\n  const confirm = async (record) => {\n    const id = record.product_id;\n    console.log(id);\n    try {\n      // Delete Data\n      const result = await axios.delete(\n        `http://165.22.252.116/api/user/deleteuserbyid/${id}`\n      );\n      console.log(initialValue);\n      setInitialValue(initialValue.filter((value) => value.user_id != id));\n      message.success({\n        content: \"\" + result.data.message,\n        duration: 5,\n        className: \"UserSuccessMessage\",\n      });\n    } catch (error) {\n      const messageError = error.response.data.message;\n      message.error({\n        content: \"\" + messageError,\n        className: \"UserErrorMessage\",\n        duration: 5,\n      });\n    }\n  };\n\n  // searchBar\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          inputId=\"select-input\"\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        // setTimeout(() => searchRef.current.select.inputRef.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  // showModal\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  // Data\n  const columns = [\n    {\n      //title is display on coulmn\n      //dataIndex to match with datasouce to display\n      title: <strong>ID</strong>,\n      dataIndex: \"product_id\",\n      key: \"id\",\n      // defaultSortOrder: \"ascend\",\n\n      ...getColumnSearchProps(\"product_id\"),\n      sorter: (a, b) => a.product_id - b.product_id,\n    },\n    {\n      title: <strong>SHOP's Name</strong>,\n      dataIndex: \"shop_owner\",\n      key: \"shop_owner\",\n    },\n\n    {\n      title: <strong>COD</strong>,\n      dataIndex: \"service_paid_by\",\n      key: \"service_paid_by\",\n    },\n\n    {\n      title: <strong>Receiver</strong>,\n      dataIndex: \"cust_name\",\n      key: \"cust_name\",\n    },\n    {\n      title: <strong>STATUS</strong>,\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => (\n        <>\n          {(() => {\n            if (status === \"UNSUCCESS\")\n              return <span style={{ color: \"#ff4d4f\" }}>UNSUCCESS</span>;\n            if (status === \"ON GOING\")\n              return <span style={{ color: \"#1890ff\" }}>ON GOING</span>;\n            return <span style={{ color: \"#52c41a\" }}>SUCCESS</span>;\n          })()}\n        </>\n      ),\n    },\n    {\n      title: <strong>Date</strong>,\n      dataIndex: \"date\",\n      key: \"date\",\n    },\n\n    {\n      title: <strong>Delivery By</strong>,\n      dataIndex: \"DeliveryID\",\n      key: \"DeliveryID\",\n    },\n  ];\n  return (\n    <ProductContext.Provider\n      value={{\n        packageId,\n        date,\n        location,\n        shopPhone,\n        receiverPhone,\n        setPackageId,\n        setDate,\n        setLocation,\n        setShopPhone,\n        setReceiverPhone,\n      }}\n    >\n      <div>\n        <Chart />\n\n        {/* Table */}\n        <Table\n          columns={columns}\n          dataSource={data} /*dataSource={initialValue}*/\n        />\n      </div>\n    </ProductContext.Provider>\n  );\n}\n\nexport default ReportDelivery;\n",{"ruleId":"307","replacedBy":"308"},{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","severity":1,"message":"312","line":10,"column":8,"nodeType":"313","messageId":"314","endLine":10,"endColumn":14},{"ruleId":"311","severity":1,"message":"315","line":36,"column":9,"nodeType":"313","messageId":"314","endLine":36,"endColumn":18},{"ruleId":"316","severity":1,"message":"317","line":98,"column":21,"nodeType":"318","endLine":98,"endColumn":34},{"ruleId":"311","severity":1,"message":"319","line":1,"column":17,"nodeType":"313","messageId":"314","endLine":1,"endColumn":25},{"ruleId":"311","severity":1,"message":"320","line":5,"column":10,"nodeType":"313","messageId":"314","endLine":5,"endColumn":16},{"ruleId":"311","severity":1,"message":"321","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":16},{"ruleId":"311","severity":1,"message":"321","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":16},{"ruleId":"311","severity":1,"message":"322","line":4,"column":8,"nodeType":"313","messageId":"314","endLine":4,"endColumn":17},{"ruleId":"311","severity":1,"message":"323","line":7,"column":11,"nodeType":"313","messageId":"314","endLine":7,"endColumn":22},{"ruleId":"311","severity":1,"message":"324","line":8,"column":11,"nodeType":"313","messageId":"314","endLine":8,"endColumn":21},{"ruleId":"311","severity":1,"message":"325","line":10,"column":9,"nodeType":"313","messageId":"314","endLine":10,"endColumn":21},{"ruleId":"311","severity":1,"message":"321","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":16},{"ruleId":"311","severity":1,"message":"321","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":16},{"ruleId":"311","severity":1,"message":"326","line":3,"column":10,"nodeType":"313","messageId":"314","endLine":3,"endColumn":18},{"ruleId":"311","severity":1,"message":"324","line":8,"column":11,"nodeType":"313","messageId":"314","endLine":8,"endColumn":21},{"ruleId":"311","severity":1,"message":"327","line":8,"column":23,"nodeType":"313","messageId":"314","endLine":8,"endColumn":36},{"ruleId":"311","severity":1,"message":"328","line":3,"column":18,"nodeType":"313","messageId":"314","endLine":3,"endColumn":23},{"ruleId":"311","severity":1,"message":"321","line":3,"column":41,"nodeType":"313","messageId":"314","endLine":3,"endColumn":47},{"ruleId":"311","severity":1,"message":"323","line":13,"column":11,"nodeType":"313","messageId":"314","endLine":13,"endColumn":22},{"ruleId":"311","severity":1,"message":"324","line":14,"column":11,"nodeType":"313","messageId":"314","endLine":14,"endColumn":21},{"ruleId":"311","severity":1,"message":"329","line":15,"column":27,"nodeType":"313","messageId":"314","endLine":15,"endColumn":44},{"ruleId":"330","severity":1,"message":"331","line":38,"column":11,"nodeType":"332","endLine":38,"endColumn":80},{"ruleId":"311","severity":1,"message":"333","line":21,"column":9,"nodeType":"313","messageId":"314","endLine":21,"endColumn":13},{"ruleId":"311","severity":1,"message":"334","line":56,"column":10,"nodeType":"313","messageId":"314","endLine":56,"endColumn":19},{"ruleId":"335","severity":1,"message":"336","line":79,"column":6,"nodeType":"337","endLine":79,"endColumn":8,"suggestions":"338"},{"ruleId":"335","severity":1,"message":"336","line":103,"column":6,"nodeType":"337","endLine":103,"endColumn":15,"suggestions":"339"},{"ruleId":"311","severity":1,"message":"340","line":186,"column":9,"nodeType":"313","messageId":"314","endLine":186,"endColumn":20},{"ruleId":"311","severity":1,"message":"341","line":197,"column":9,"nodeType":"313","messageId":"314","endLine":197,"endColumn":19},{"ruleId":"342","severity":1,"message":"343","line":245,"column":68,"nodeType":"344","messageId":"345","endLine":245,"endColumn":70},{"ruleId":"311","severity":1,"message":"346","line":266,"column":12,"nodeType":"313","messageId":"314","endLine":266,"endColumn":23},{"ruleId":"347","severity":1,"message":"348","line":396,"column":1,"nodeType":"349","messageId":"350","endLine":398,"endColumn":2},{"ruleId":"347","severity":1,"message":"348","line":399,"column":1,"nodeType":"349","messageId":"350","endLine":401,"endColumn":2},{"ruleId":"311","severity":1,"message":"351","line":2,"column":40,"nodeType":"313","messageId":"314","endLine":2,"endColumn":43},{"ruleId":"311","severity":1,"message":"352","line":2,"column":45,"nodeType":"313","messageId":"314","endLine":2,"endColumn":48},{"ruleId":"311","severity":1,"message":"353","line":3,"column":10,"nodeType":"313","messageId":"314","endLine":3,"endColumn":25},{"ruleId":"311","severity":1,"message":"354","line":7,"column":9,"nodeType":"313","messageId":"314","endLine":7,"endColumn":15},{"ruleId":"311","severity":1,"message":"355","line":25,"column":10,"nodeType":"313","messageId":"314","endLine":25,"endColumn":24},{"ruleId":"311","severity":1,"message":"356","line":25,"column":26,"nodeType":"313","messageId":"314","endLine":25,"endColumn":43},{"ruleId":"311","severity":1,"message":"334","line":26,"column":10,"nodeType":"313","messageId":"314","endLine":26,"endColumn":19},{"ruleId":"311","severity":1,"message":"357","line":26,"column":21,"nodeType":"313","messageId":"314","endLine":26,"endColumn":33},{"ruleId":"347","severity":1,"message":"348","line":214,"column":1,"nodeType":"349","messageId":"350","endLine":227,"endColumn":2},{"ruleId":"311","severity":1,"message":"319","line":1,"column":29,"nodeType":"313","messageId":"314","endLine":1,"endColumn":37},{"ruleId":"311","severity":1,"message":"323","line":18,"column":11,"nodeType":"313","messageId":"314","endLine":18,"endColumn":22},{"ruleId":"311","severity":1,"message":"324","line":19,"column":11,"nodeType":"313","messageId":"314","endLine":19,"endColumn":21},{"ruleId":"311","severity":1,"message":"358","line":20,"column":11,"nodeType":"313","messageId":"314","endLine":20,"endColumn":25},{"ruleId":"311","severity":1,"message":"359","line":21,"column":7,"nodeType":"313","messageId":"314","endLine":21,"endColumn":14},{"ruleId":"316","severity":1,"message":"317","line":81,"column":15,"nodeType":"318","endLine":81,"endColumn":37},{"ruleId":"316","severity":1,"message":"317","line":100,"column":15,"nodeType":"318","endLine":100,"endColumn":37},{"ruleId":"311","severity":1,"message":"319","line":1,"column":17,"nodeType":"313","messageId":"314","endLine":1,"endColumn":25},{"ruleId":"311","severity":1,"message":"360","line":1,"column":27,"nodeType":"313","messageId":"314","endLine":1,"endColumn":33},{"ruleId":"311","severity":1,"message":"361","line":1,"column":35,"nodeType":"313","messageId":"314","endLine":1,"endColumn":44},{"ruleId":"311","severity":1,"message":"353","line":3,"column":10,"nodeType":"313","messageId":"314","endLine":3,"endColumn":25},{"ruleId":"311","severity":1,"message":"362","line":18,"column":22,"nodeType":"313","messageId":"314","endLine":18,"endColumn":35},{"ruleId":"311","severity":1,"message":"363","line":1,"column":8,"nodeType":"313","messageId":"314","endLine":1,"endColumn":13},{"ruleId":"311","severity":1,"message":"319","line":1,"column":17,"nodeType":"313","messageId":"314","endLine":1,"endColumn":25},{"ruleId":"311","severity":1,"message":"364","line":2,"column":8,"nodeType":"313","messageId":"314","endLine":2,"endColumn":16},{"ruleId":"311","severity":1,"message":"365","line":15,"column":3,"nodeType":"313","messageId":"314","endLine":15,"endColumn":10},{"ruleId":"311","severity":1,"message":"366","line":20,"column":3,"nodeType":"313","messageId":"314","endLine":20,"endColumn":15},{"ruleId":"311","severity":1,"message":"367","line":22,"column":3,"nodeType":"313","messageId":"314","endLine":22,"endColumn":15},{"ruleId":"311","severity":1,"message":"333","line":30,"column":9,"nodeType":"313","messageId":"314","endLine":30,"endColumn":13},{"ruleId":"311","severity":1,"message":"368","line":73,"column":10,"nodeType":"313","messageId":"314","endLine":73,"endColumn":18},{"ruleId":"311","severity":1,"message":"334","line":77,"column":10,"nodeType":"313","messageId":"314","endLine":77,"endColumn":19},{"ruleId":"335","severity":1,"message":"336","line":109,"column":6,"nodeType":"337","endLine":109,"endColumn":8,"suggestions":"369"},{"ruleId":"335","severity":1,"message":"336","line":132,"column":6,"nodeType":"337","endLine":132,"endColumn":15,"suggestions":"370"},{"ruleId":"311","severity":1,"message":"371","line":146,"column":9,"nodeType":"313","messageId":"314","endLine":146,"endColumn":19},{"ruleId":"342","severity":1,"message":"343","line":191,"column":68,"nodeType":"344","messageId":"345","endLine":191,"endColumn":70},{"ruleId":"311","severity":1,"message":"372","line":1,"column":27,"nodeType":"313","messageId":"314","endLine":1,"endColumn":37},{"ruleId":"311","severity":1,"message":"373","line":4,"column":10,"nodeType":"313","messageId":"314","endLine":4,"endColumn":24},{"ruleId":"311","severity":1,"message":"351","line":6,"column":40,"nodeType":"313","messageId":"314","endLine":6,"endColumn":43},{"ruleId":"311","severity":1,"message":"352","line":6,"column":45,"nodeType":"313","messageId":"314","endLine":6,"endColumn":48},{"ruleId":"311","severity":1,"message":"353","line":7,"column":10,"nodeType":"313","messageId":"314","endLine":7,"endColumn":25},{"ruleId":"311","severity":1,"message":"374","line":3,"column":8,"nodeType":"313","messageId":"314","endLine":3,"endColumn":13},{"ruleId":"311","severity":1,"message":"375","line":6,"column":3,"nodeType":"313","messageId":"314","endLine":6,"endColumn":13},{"ruleId":"311","severity":1,"message":"376","line":10,"column":3,"nodeType":"313","messageId":"314","endLine":10,"endColumn":8},{"ruleId":"311","severity":1,"message":"377","line":12,"column":3,"nodeType":"313","messageId":"314","endLine":12,"endColumn":13},{"ruleId":"311","severity":1,"message":"365","line":14,"column":3,"nodeType":"313","messageId":"314","endLine":14,"endColumn":10},{"ruleId":"311","severity":1,"message":"353","line":18,"column":3,"nodeType":"313","messageId":"314","endLine":18,"endColumn":18},{"ruleId":"311","severity":1,"message":"378","line":19,"column":3,"nodeType":"313","messageId":"314","endLine":19,"endColumn":17},{"ruleId":"311","severity":1,"message":"366","line":20,"column":3,"nodeType":"313","messageId":"314","endLine":20,"endColumn":15},{"ruleId":"311","severity":1,"message":"367","line":22,"column":3,"nodeType":"313","messageId":"314","endLine":22,"endColumn":15},{"ruleId":"311","severity":1,"message":"379","line":24,"column":8,"nodeType":"313","messageId":"314","endLine":24,"endColumn":14},{"ruleId":"311","severity":1,"message":"380","line":27,"column":8,"nodeType":"313","messageId":"314","endLine":27,"endColumn":25},{"ruleId":"311","severity":1,"message":"354","line":31,"column":9,"nodeType":"313","messageId":"314","endLine":31,"endColumn":15},{"ruleId":"311","severity":1,"message":"381","line":91,"column":9,"nodeType":"313","messageId":"314","endLine":91,"endColumn":19},{"ruleId":"311","severity":1,"message":"382","line":93,"column":10,"nodeType":"313","messageId":"314","endLine":93,"endColumn":17},{"ruleId":"311","severity":1,"message":"383","line":93,"column":19,"nodeType":"313","messageId":"314","endLine":93,"endColumn":29},{"ruleId":"311","severity":1,"message":"384","line":95,"column":10,"nodeType":"313","messageId":"314","endLine":95,"endColumn":17},{"ruleId":"311","severity":1,"message":"368","line":96,"column":10,"nodeType":"313","messageId":"314","endLine":96,"endColumn":18},{"ruleId":"311","severity":1,"message":"355","line":99,"column":10,"nodeType":"313","messageId":"314","endLine":99,"endColumn":24},{"ruleId":"311","severity":1,"message":"334","line":100,"column":10,"nodeType":"313","messageId":"314","endLine":100,"endColumn":19},{"ruleId":"335","severity":1,"message":"336","line":127,"column":6,"nodeType":"337","endLine":127,"endColumn":8,"suggestions":"385"},{"ruleId":"311","severity":1,"message":"386","line":131,"column":12,"nodeType":"313","messageId":"314","endLine":131,"endColumn":20},{"ruleId":"311","severity":1,"message":"387","line":136,"column":9,"nodeType":"313","messageId":"314","endLine":136,"endColumn":15},{"ruleId":"311","severity":1,"message":"371","line":141,"column":9,"nodeType":"313","messageId":"314","endLine":141,"endColumn":19},{"ruleId":"311","severity":1,"message":"388","line":158,"column":9,"nodeType":"313","messageId":"314","endLine":158,"endColumn":17},{"ruleId":"311","severity":1,"message":"389","line":166,"column":9,"nodeType":"313","messageId":"314","endLine":166,"endColumn":21},{"ruleId":"311","severity":1,"message":"390","line":172,"column":9,"nodeType":"313","messageId":"314","endLine":172,"endColumn":16},{"ruleId":"342","severity":1,"message":"343","line":181,"column":68,"nodeType":"344","messageId":"345","endLine":181,"endColumn":70},{"ruleId":"311","severity":1,"message":"391","line":265,"column":9,"nodeType":"313","messageId":"314","endLine":265,"endColumn":18},{"ruleId":"311","severity":1,"message":"360","line":1,"column":27,"nodeType":"313","messageId":"314","endLine":1,"endColumn":33},{"ruleId":"311","severity":1,"message":"392","line":2,"column":23,"nodeType":"313","messageId":"314","endLine":2,"endColumn":26},{"ruleId":"311","severity":1,"message":"393","line":2,"column":28,"nodeType":"313","messageId":"314","endLine":2,"endColumn":33},{"ruleId":"311","severity":1,"message":"394","line":5,"column":10,"nodeType":"313","messageId":"314","endLine":5,"endColumn":30},{"ruleId":"311","severity":1,"message":"395","line":291,"column":10,"nodeType":"313","messageId":"314","endLine":291,"endColumn":21},{"ruleId":"311","severity":1,"message":"396","line":292,"column":24,"nodeType":"313","messageId":"314","endLine":292,"endColumn":39},{"ruleId":"311","severity":1,"message":"397","line":293,"column":10,"nodeType":"313","messageId":"314","endLine":293,"endColumn":17},{"ruleId":"311","severity":1,"message":"383","line":293,"column":19,"nodeType":"313","messageId":"314","endLine":293,"endColumn":29},{"ruleId":"335","severity":1,"message":"336","line":299,"column":6,"nodeType":"337","endLine":299,"endColumn":8,"suggestions":"398"},{"ruleId":"311","severity":1,"message":"399","line":301,"column":12,"nodeType":"313","messageId":"314","endLine":301,"endColumn":24},{"ruleId":"342","severity":1,"message":"400","line":309,"column":15,"nodeType":"344","messageId":"345","endLine":309,"endColumn":17},{"ruleId":"342","severity":1,"message":"400","line":313,"column":15,"nodeType":"344","messageId":"345","endLine":313,"endColumn":17},{"ruleId":"342","severity":1,"message":"400","line":314,"column":17,"nodeType":"344","messageId":"345","endLine":314,"endColumn":19},{"ruleId":"401","severity":1,"message":"402","line":338,"column":9,"nodeType":"403","messageId":"404","endLine":344,"endColumn":11},{"ruleId":"405","severity":1,"message":"406","line":385,"column":19,"nodeType":"344","messageId":"407","endLine":385,"endColumn":20},{"ruleId":"330","severity":1,"message":"331","line":394,"column":25,"nodeType":"332","endLine":394,"endColumn":28},{"ruleId":"311","severity":1,"message":"328","line":3,"column":18,"nodeType":"313","messageId":"314","endLine":3,"endColumn":23},{"ruleId":"311","severity":1,"message":"321","line":3,"column":41,"nodeType":"313","messageId":"314","endLine":3,"endColumn":47},{"ruleId":"311","severity":1,"message":"323","line":13,"column":11,"nodeType":"313","messageId":"314","endLine":13,"endColumn":22},{"ruleId":"311","severity":1,"message":"324","line":14,"column":11,"nodeType":"313","messageId":"314","endLine":14,"endColumn":21},{"ruleId":"311","severity":1,"message":"329","line":15,"column":27,"nodeType":"313","messageId":"314","endLine":15,"endColumn":44},{"ruleId":"330","severity":1,"message":"331","line":41,"column":13,"nodeType":"332","endLine":44,"endColumn":14},{"ruleId":"311","severity":1,"message":"351","line":5,"column":40,"nodeType":"313","messageId":"314","endLine":5,"endColumn":43},{"ruleId":"311","severity":1,"message":"352","line":5,"column":45,"nodeType":"313","messageId":"314","endLine":5,"endColumn":48},{"ruleId":"311","severity":1,"message":"408","line":5,"column":50,"nodeType":"313","messageId":"314","endLine":5,"endColumn":56},{"ruleId":"311","severity":1,"message":"409","line":6,"column":10,"nodeType":"313","messageId":"314","endLine":6,"endColumn":22},{"ruleId":"311","severity":1,"message":"410","line":6,"column":24,"nodeType":"313","messageId":"314","endLine":6,"endColumn":36},{"ruleId":"311","severity":1,"message":"389","line":22,"column":9,"nodeType":"313","messageId":"314","endLine":22,"endColumn":21},{"ruleId":"311","severity":1,"message":"411","line":30,"column":11,"nodeType":"313","messageId":"314","endLine":30,"endColumn":21},{"ruleId":"311","severity":1,"message":"376","line":10,"column":3,"nodeType":"313","messageId":"314","endLine":10,"endColumn":8},{"ruleId":"311","severity":1,"message":"377","line":12,"column":3,"nodeType":"313","messageId":"314","endLine":12,"endColumn":13},{"ruleId":"311","severity":1,"message":"365","line":14,"column":3,"nodeType":"313","messageId":"314","endLine":14,"endColumn":10},{"ruleId":"311","severity":1,"message":"353","line":18,"column":3,"nodeType":"313","messageId":"314","endLine":18,"endColumn":18},{"ruleId":"311","severity":1,"message":"378","line":19,"column":3,"nodeType":"313","messageId":"314","endLine":19,"endColumn":17},{"ruleId":"311","severity":1,"message":"366","line":20,"column":3,"nodeType":"313","messageId":"314","endLine":20,"endColumn":15},{"ruleId":"311","severity":1,"message":"367","line":22,"column":3,"nodeType":"313","messageId":"314","endLine":22,"endColumn":15},{"ruleId":"311","severity":1,"message":"382","line":94,"column":10,"nodeType":"313","messageId":"314","endLine":94,"endColumn":17},{"ruleId":"311","severity":1,"message":"383","line":94,"column":19,"nodeType":"313","messageId":"314","endLine":94,"endColumn":29},{"ruleId":"311","severity":1,"message":"384","line":96,"column":10,"nodeType":"313","messageId":"314","endLine":96,"endColumn":17},{"ruleId":"311","severity":1,"message":"368","line":97,"column":10,"nodeType":"313","messageId":"314","endLine":97,"endColumn":18},{"ruleId":"311","severity":1,"message":"355","line":100,"column":10,"nodeType":"313","messageId":"314","endLine":100,"endColumn":24},{"ruleId":"311","severity":1,"message":"334","line":101,"column":10,"nodeType":"313","messageId":"314","endLine":101,"endColumn":19},{"ruleId":"335","severity":1,"message":"336","line":128,"column":6,"nodeType":"337","endLine":128,"endColumn":8,"suggestions":"412"},{"ruleId":"311","severity":1,"message":"387","line":137,"column":9,"nodeType":"313","messageId":"314","endLine":137,"endColumn":15},{"ruleId":"311","severity":1,"message":"371","line":142,"column":9,"nodeType":"313","messageId":"314","endLine":142,"endColumn":19},{"ruleId":"311","severity":1,"message":"388","line":159,"column":9,"nodeType":"313","messageId":"314","endLine":159,"endColumn":17},{"ruleId":"311","severity":1,"message":"389","line":167,"column":9,"nodeType":"313","messageId":"314","endLine":167,"endColumn":21},{"ruleId":"311","severity":1,"message":"391","line":250,"column":9,"nodeType":"313","messageId":"314","endLine":250,"endColumn":18},{"ruleId":"311","severity":1,"message":"375","line":6,"column":3,"nodeType":"313","messageId":"314","endLine":6,"endColumn":13},{"ruleId":"311","severity":1,"message":"376","line":10,"column":3,"nodeType":"313","messageId":"314","endLine":10,"endColumn":8},{"ruleId":"311","severity":1,"message":"377","line":12,"column":3,"nodeType":"313","messageId":"314","endLine":12,"endColumn":13},{"ruleId":"311","severity":1,"message":"365","line":14,"column":3,"nodeType":"313","messageId":"314","endLine":14,"endColumn":10},{"ruleId":"311","severity":1,"message":"353","line":18,"column":3,"nodeType":"313","messageId":"314","endLine":18,"endColumn":18},{"ruleId":"311","severity":1,"message":"378","line":19,"column":3,"nodeType":"313","messageId":"314","endLine":19,"endColumn":17},{"ruleId":"311","severity":1,"message":"366","line":20,"column":3,"nodeType":"313","messageId":"314","endLine":20,"endColumn":15},{"ruleId":"311","severity":1,"message":"367","line":22,"column":3,"nodeType":"313","messageId":"314","endLine":22,"endColumn":15},{"ruleId":"311","severity":1,"message":"379","line":24,"column":8,"nodeType":"313","messageId":"314","endLine":24,"endColumn":14},{"ruleId":"311","severity":1,"message":"380","line":27,"column":8,"nodeType":"313","messageId":"314","endLine":27,"endColumn":25},{"ruleId":"311","severity":1,"message":"354","line":31,"column":9,"nodeType":"313","messageId":"314","endLine":31,"endColumn":15},{"ruleId":"311","severity":1,"message":"381","line":91,"column":9,"nodeType":"313","messageId":"314","endLine":91,"endColumn":19},{"ruleId":"311","severity":1,"message":"382","line":93,"column":10,"nodeType":"313","messageId":"314","endLine":93,"endColumn":17},{"ruleId":"311","severity":1,"message":"383","line":93,"column":19,"nodeType":"313","messageId":"314","endLine":93,"endColumn":29},{"ruleId":"311","severity":1,"message":"384","line":95,"column":10,"nodeType":"313","messageId":"314","endLine":95,"endColumn":17},{"ruleId":"311","severity":1,"message":"368","line":96,"column":10,"nodeType":"313","messageId":"314","endLine":96,"endColumn":18},{"ruleId":"311","severity":1,"message":"355","line":99,"column":10,"nodeType":"313","messageId":"314","endLine":99,"endColumn":24},{"ruleId":"311","severity":1,"message":"334","line":100,"column":10,"nodeType":"313","messageId":"314","endLine":100,"endColumn":19},{"ruleId":"335","severity":1,"message":"336","line":127,"column":6,"nodeType":"337","endLine":127,"endColumn":8,"suggestions":"413"},{"ruleId":"311","severity":1,"message":"386","line":131,"column":12,"nodeType":"313","messageId":"314","endLine":131,"endColumn":20},{"ruleId":"311","severity":1,"message":"387","line":136,"column":9,"nodeType":"313","messageId":"314","endLine":136,"endColumn":15},{"ruleId":"311","severity":1,"message":"371","line":141,"column":9,"nodeType":"313","messageId":"314","endLine":141,"endColumn":19},{"ruleId":"311","severity":1,"message":"388","line":158,"column":9,"nodeType":"313","messageId":"314","endLine":158,"endColumn":17},{"ruleId":"311","severity":1,"message":"389","line":166,"column":9,"nodeType":"313","messageId":"314","endLine":166,"endColumn":21},{"ruleId":"311","severity":1,"message":"390","line":172,"column":9,"nodeType":"313","messageId":"314","endLine":172,"endColumn":16},{"ruleId":"342","severity":1,"message":"343","line":181,"column":68,"nodeType":"344","messageId":"345","endLine":181,"endColumn":70},{"ruleId":"311","severity":1,"message":"391","line":265,"column":9,"nodeType":"313","messageId":"314","endLine":265,"endColumn":18},"no-native-reassign",["414"],"no-negated-in-lhs",["415"],"no-unused-vars","'Report' is defined but never used.","Identifier","unusedVar","'firstPath' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'Layout' is defined but never used.","'Button' is defined but never used.","'UserLogin' is defined but never used.","'loginStatus' is assigned a value but never used.","'roleStatus' is assigned a value but never used.","'handleLogout' is assigned a value but never used.","'Redirect' is defined but never used.","'setRoleStatus' is assigned a value but never used.","'Image' is defined but never used.","'setUsernameStatus' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'data' is assigned a value but never used.","'modalText' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialValue'. Either include it or remove the dependency array.","ArrayExpression",["416"],["417"],"'handleClick' is assigned a value but never used.","'showModal1' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'refreshPage' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Col' is defined but never used.","'Row' is defined but never used.","'UserAddOutlined' is defined but never used.","'Option' is assigned a value but never used.","'confirmLoading' is assigned a value but never used.","'setConfirmLoading' is assigned a value but never used.","'setModalText' is assigned a value but never used.","'userNameStatus' is assigned a value but never used.","'history' is assigned a value but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'user_password' is assigned a value but never used.","'React' is defined but never used.","'ReactDOM' is defined but never used.","'Tooltip' is defined but never used.","'EditOutlined' is defined but never used.","'SyncOutlined' is defined but never used.","'visible1' is assigned a value but never used.",["418"],["419"],"'handleEdit' is assigned a value but never used.","'useContext' is defined but never used.","'ProductContext' is defined but never used.","'axios' is defined but never used.","'DatePicker' is defined but never used.","'Modal' is defined but never used.","'Popconfirm' is defined but never used.","'DeleteOutlined' is defined but never used.","'moment' is defined but never used.","'ContentProductAdd' is defined but never used.","'dateFormat' is assigned a value but never used.","'Trigger' is assigned a value but never used.","'setTrigger' is assigned a value but never used.","'visible' is assigned a value but never used.",["420"],"'onChange' is defined but never used.","'cancel' is assigned a value but never used.","'handleOk' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","'confirm' is assigned a value but never used.","'showModal' is assigned a value but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'getAllByDisplayValue' is defined but never used.","'colorStatus' is assigned a value but never used.","'setInitialValue' is assigned a value but never used.","'trigger' is assigned a value but never used.",["421"],"'handleChange' is defined but never used.","Expected '===' and instead saw '=='.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Select' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","'shop_owner' is assigned a value but never used.",["422"],["423"],"no-global-assign","no-unsafe-negation",{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"424","fix":"428"},{"desc":"429","fix":"430"},{"desc":"424","fix":"431"},{"desc":"424","fix":"432"},{"desc":"424","fix":"433"},{"desc":"424","fix":"434"},"Update the dependencies array to be: [initialValue]",{"range":"435","text":"436"},"Update the dependencies array to be: [initialValue, trigger]",{"range":"437","text":"438"},{"range":"439","text":"436"},"Update the dependencies array to be: [Trigger, initialValue]",{"range":"440","text":"441"},{"range":"442","text":"436"},{"range":"443","text":"436"},{"range":"444","text":"436"},{"range":"445","text":"436"},[2374,2376],"[initialValue]",[3152,3161],"[initialValue, trigger]",[3186,3188],[3977,3986],"[Trigger, initialValue]",[3443,3445],[7330,7332],[3359,3361],[3429,3431]]